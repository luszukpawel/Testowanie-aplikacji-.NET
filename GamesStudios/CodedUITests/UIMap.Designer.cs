// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 15.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CodedUITests
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// OpenInternetExplorer - Use 'OpenInternetExplorerParams' to pass parameters into this method.
        /// </summary>
        public void OpenInternetExplorer()
        {

            // Go to web page 'http://go.microsoft.com/fwlink/p/?LinkId=255141' using new browser instance
            BrowserWindow gomicrosoftcomBrowser = BrowserWindow.Launch(new System.Uri(this.OpenInternetExplorerParams.Url));
        }
        
        /// <summary>
        /// OpenApp - Use 'OpenAppParams' to pass parameters into this method.
        /// </summary>
        public void OpenApp()
        {
            #region Variable Declarations
            WinControl uINowakartaMozillaFireApplication = this.UINowakartaMozillaFireWindow.UINowakartaMozillaFireApplication;
            WinComboBox uIItemComboBox = this.UINowakartaMozillaFireWindow.UIPaseknarzędzinawigacToolBar.UIItemComboBox;
            WinEdit uIWprowadźadreslubszukEdit = this.UINowakartaMozillaFireWindow.UIItemComboBox.UIWprowadźadreslubszukEdit;
            #endregion

            // Click 'Nowa karta - Mozilla Firefox' Application
            Mouse.Click(uINowakartaMozillaFireApplication, new Point(889, 53));

            // Select 'http://localhost:59145/' in combo box
            uIItemComboBox.EditableItem = this.OpenAppParams.UIItemComboBoxEditableItem;

            // Type '{Enter}' in 'Wprowadź adres lub szukaj' text box
            Keyboard.SendKeys(uIWprowadźadreslubszukEdit, this.OpenAppParams.UIWprowadźadreslubszukEditSendKeys, ModifierKeys.None);
        }
        
        /// <summary>
        /// ListaOsobClick
        /// </summary>
        public void ListaOsobClick()
        {
            #region Variable Declarations
            HtmlButton uIListaosóbButton = this.UIMSNPolskaOutlookSkypWindow.UIErrorPageDocument.UIListaosóbButton;
            #endregion

            // Click 'Lista osób' button
            Mouse.Click(uIListaosóbButton, new Point(21, 6));
        }
        
        /// <summary>
        /// SprAdresClick
        /// </summary>
        public void SprAdresClick()
        {
            #region Variable Declarations
            HtmlButton uISprawdźadresButton = this.UIAllMyASPNETApplicatiWindow.UIAllMyASPNETApplicatiDocument.UISprawdźadresButton;
            #endregion

            // Click 'Sprawdź adres' button
            Mouse.Click(uISprawdźadresButton, new Point(30, 16));
        }
        
        /// <summary>
        /// ClickEditAdres
        /// </summary>
        public void ClickEditAdres()
        {
            #region Variable Declarations
            HtmlButton uIEdytujButton = this.UIMyASPNETApplicationIWindow.UIMyASPNETApplicationDocument.UIEdytujButton;
            #endregion

            // Click 'Edytuj' button
            Mouse.Click(uIEdytujButton, new Point(62, 26));
        }
        
        /// <summary>
        /// EditMiastoPerson - Use 'EditMiastoPersonParams' to pass parameters into this method.
        /// </summary>
        public void EditMiastoPerson()
        {
            #region Variable Declarations
            HtmlEdit uIMiastoEdit = this.UIMyASPNETApplicationIWindow.UIMyASPNETApplicationDocument1.UIMiastoEdit;
            #endregion

            // Type 'Gdansk' in 'Miasto' text box
            uIMiastoEdit.Text = this.EditMiastoPersonParams.UIMiastoEditText;
        }
        
        /// <summary>
        /// SaveAdresPersonClick
        /// </summary>
        public void SaveAdresPersonClick()
        {
            #region Variable Declarations
            HtmlInputButton uIZapiszButton = this.UIMyASPNETApplicationIWindow.UIMyASPNETApplicationDocument1.UIZapiszButton;
            #endregion

            // Click 'Zapisz' button
            Mouse.Click(uIZapiszButton, new Point(55, 34));
        }
        
        /// <summary>
        /// OpenFirefox - Use 'OpenFirefoxParams' to pass parameters into this method.
        /// </summary>
        public void OpenFirefox()
        {
            #region Variable Declarations
            WinButton uIItemButton = this.UIUseUIAutomationToTesWindow.UIUseUIAutomationToTesApplication.UIItemButton;
            #endregion

            // Launch '%ProgramFiles(x86)%\Mozilla Firefox\firefox.exe'
            ApplicationUnderTest uIUseUIAutomationToTesWindow = ApplicationUnderTest.Launch(this.OpenFirefoxParams.UIUseUIAutomationToTesWindowExePath, this.OpenFirefoxParams.UIUseUIAutomationToTesWindowAlternateExePath);

            // Click button numbered 2 in 'Use UI Automation To Test Your Code - Mozilla Fire...' Application
            Mouse.Click(uIItemButton, new Point(25, 22));
        }
        
        /// <summary>
        /// OpenFirefoxandGotoPage - Use 'OpenFirefoxandGotoPageParams' to pass parameters into this method.
        /// </summary>
        public void OpenFirefoxandGotoPage()
        {
            #region Variable Declarations
            WinEdit uIWprowadźadreslubszukEdit = this.UINowakartaMozillaFireWindow.UIItemComboBox.UIWprowadźadreslubszukEdit;
            #endregion

            // Launch '%ProgramFiles(x86)%\Mozilla Firefox\firefox.exe'
            ApplicationUnderTest firefoxApplication = ApplicationUnderTest.Launch(this.OpenFirefoxandGotoPageParams.ExePath, this.OpenFirefoxandGotoPageParams.AlternateExePath);

            // Click 'Wprowadź adres lub szukaj' text box
            Mouse.Click(uIWprowadźadreslubszukEdit, new Point(603, 10));

            // Type 'Control + v' in 'Wprowadź adres lub szukaj' text box
            Keyboard.SendKeys(uIWprowadźadreslubszukEdit, this.OpenFirefoxandGotoPageParams.UIWprowadźadreslubszukEditSendKeys, ModifierKeys.Control);

            // Type '{Enter}' in 'Wprowadź adres lub szukaj' text box
            Keyboard.SendKeys(uIWprowadźadreslubszukEdit, this.OpenFirefoxandGotoPageParams.UIWprowadźadreslubszukEditSendKeys1, ModifierKeys.None);
        }
        
        /// <summary>
        /// GoToGamesAndCreateNew - Use 'GoToGamesAndCreateNewParams' to pass parameters into this method.
        /// </summary>
        public void GoToGamesAndCreateNew()
        {
            #region Variable Declarations
            WinControl uIHomePageGamesStudiosDocument = this.UINowakartaMozillaFireWindow.UIItemPropertyPage.UIHomePageGamesStudiosDocument;
            WinEdit uICreateNewEdit = this.UINowakartaMozillaFireWindow.UICreateNewHyperlink.UICreateNewEdit;
            WinEdit uITitleEdit = this.UINowakartaMozillaFireWindow.UICreateGamesStudiosDocument.UITitleEdit;
            WinComboBox uIGenreComboBox = this.UINowakartaMozillaFireWindow.UICreateGamesStudiosDocument.UIGenreComboBox;
            WinComboBox uIGenreComboBox1 = this.UIItemWindow.UIGenreComboBox;
            WinButton uICreateButton = this.UINowakartaMozillaFireWindow.UICreateGamesStudiosDocument.UICreateButton;
            #endregion

            // Click 'Home Page - GamesStudios' document
            Mouse.Click(uIHomePageGamesStudiosDocument, new Point(941, 33));

            // Click 'Create New' text box
            Mouse.Click(uICreateNewEdit, new Point(47, 5));

            // Type 'CodedUITest' in 'Title' text box
            uITitleEdit.Text = this.GoToGamesAndCreateNewParams.UITitleEditText;

            // Click 'Genre' combo box
            Mouse.Click(uIGenreComboBox, new Point(327, 25));

            // Click 'Genre' combo box
            Mouse.Click(uIGenreComboBox1, new Point(234, 59));

            // Click 'Create' button
            Mouse.Click(uICreateButton, new Point(50, 27));
        }
        
        /// <summary>
        /// OpenFirefoxandGotoMainPage - Use 'OpenFirefoxandGotoMainPageParams' to pass parameters into this method.
        /// </summary>
        public void OpenFirefoxandGotoMainPage()
        {
            #region Variable Declarations
            WinComboBox uIItemComboBox = this.UINowakartaMozillaFireWindow.UIPaseknarzędzinawigacToolBar.UIItemComboBox;
            WinList uIItemList = this.UINowakartaMozillaFireWindow.UIHomePageGamesStudiosMoziApplication.UIItemList;
            WinEdit uIWprowadźadreslubszukEdit = this.UINowakartaMozillaFireWindow.UIItemComboBox.UIWprowadźadreslubszukEdit;
            WinEdit uIPawełLuszukProjectEdit = this.UINowakartaMozillaFireWindow.UIPawełLuszukProjectHyperlink.UIPawełLuszukProjectEdit;
            #endregion

            // Launch '%ProgramFiles(x86)%\Mozilla Firefox\firefox.exe'
            ApplicationUnderTest firefoxApplication = ApplicationUnderTest.Launch(this.OpenFirefoxandGotoMainPageParams.ExePath, this.OpenFirefoxandGotoMainPageParams.AlternateExePath);

            // Select 'localhost:59145' in combo box
            uIItemComboBox.EditableItem = this.OpenFirefoxandGotoMainPageParams.UIItemComboBoxEditableItem;

            // Select '' in list box
            uIItemList.SelectedItemsAsString = this.OpenFirefoxandGotoMainPageParams.UIItemListSelectedItemsAsString;

            // Double-Click 'Wprowadź adres lub szukaj' text box
            Mouse.DoubleClick(uIWprowadźadreslubszukEdit, new Point(375, 11));

            // Click 'Paweł Luszuk Project' text box
            Mouse.Click(uIPawełLuszukProjectEdit, new Point(124, 14));
        }
        
        /// <summary>
        /// AddNewGame - Use 'AddNewGameParams' to pass parameters into this method.
        /// </summary>
        public void AddNewGame()
        {
            #region Variable Declarations
            WinEdit uIGamesDatabaseEdit = this.UINowakartaMozillaFireWindow.UIGamesDatabaseHyperlink.UIGamesDatabaseEdit;
            WinEdit uICreateNewEdit = this.UINowakartaMozillaFireWindow.UICreateNewHyperlink.UICreateNewEdit;
            WinEdit uITitleEdit = this.UINowakartaMozillaFireWindow.UICreateGamesStudiosDocument.UITitleEdit;
            WinListItem uICodedUITestCodedUITeListItem = this.UIItemWindow1.UIItemList.UICodedUITestCodedUITeListItem;
            WinComboBox uIGenreComboBox = this.UINowakartaMozillaFireWindow.UICreateGamesStudiosDocument.UIGenreComboBox;
            WinComboBox uIGenreComboBox1 = this.UIItemWindow.UIGenreComboBox;
            WinButton uICreateButton = this.UINowakartaMozillaFireWindow.UICreateGamesStudiosDocument.UICreateButton;
            #endregion

            // Click 'Game's Database' text box
            Mouse.Click(uIGamesDatabaseEdit, new Point(28, 5));

            // Click 'Create New' text box
            Mouse.Click(uICreateNewEdit, new Point(35, 6));

            // Type 'Coded' in 'Title' text box
            uITitleEdit.Text = this.AddNewGameParams.UITitleEditText;

            // Type '{Down}' in 'Title' text box
            Keyboard.SendKeys(uITitleEdit, this.AddNewGameParams.UITitleEditSendKeys, ModifierKeys.None);

            // Type '{Enter}' in 'CodedUITest CodedUITest' list item
            Keyboard.SendKeys(uICodedUITestCodedUITeListItem, this.AddNewGameParams.UICodedUITestCodedUITeListItemSendKeys, ModifierKeys.None);

            // Type 'CodedUITest1' in 'Title' text box
            uITitleEdit.Text = this.AddNewGameParams.UITitleEditText1;

            // Type '{Tab}' in 'Title' text box
            Keyboard.SendKeys(uITitleEdit, this.AddNewGameParams.UITitleEditSendKeys1, ModifierKeys.None);

            // Click 'Genre' combo box
            Mouse.Click(uIGenreComboBox, new Point(331, 17));

            // Click 'Genre' combo box
            Mouse.Click(uIGenreComboBox1, new Point(275, 99));

            // Click 'Create' button
            Mouse.Click(uICreateButton, new Point(29, 16));
        }
        
        #region Properties
        public virtual OpenInternetExplorerParams OpenInternetExplorerParams
        {
            get
            {
                if ((this.mOpenInternetExplorerParams == null))
                {
                    this.mOpenInternetExplorerParams = new OpenInternetExplorerParams();
                }
                return this.mOpenInternetExplorerParams;
            }
        }
        
        public virtual OpenAppParams OpenAppParams
        {
            get
            {
                if ((this.mOpenAppParams == null))
                {
                    this.mOpenAppParams = new OpenAppParams();
                }
                return this.mOpenAppParams;
            }
        }
        
        public virtual EditMiastoPersonParams EditMiastoPersonParams
        {
            get
            {
                if ((this.mEditMiastoPersonParams == null))
                {
                    this.mEditMiastoPersonParams = new EditMiastoPersonParams();
                }
                return this.mEditMiastoPersonParams;
            }
        }
        
        public virtual OpenFirefoxParams OpenFirefoxParams
        {
            get
            {
                if ((this.mOpenFirefoxParams == null))
                {
                    this.mOpenFirefoxParams = new OpenFirefoxParams();
                }
                return this.mOpenFirefoxParams;
            }
        }
        
        public virtual OpenFirefoxandGotoPageParams OpenFirefoxandGotoPageParams
        {
            get
            {
                if ((this.mOpenFirefoxandGotoPageParams == null))
                {
                    this.mOpenFirefoxandGotoPageParams = new OpenFirefoxandGotoPageParams();
                }
                return this.mOpenFirefoxandGotoPageParams;
            }
        }
        
        public virtual GoToGamesAndCreateNewParams GoToGamesAndCreateNewParams
        {
            get
            {
                if ((this.mGoToGamesAndCreateNewParams == null))
                {
                    this.mGoToGamesAndCreateNewParams = new GoToGamesAndCreateNewParams();
                }
                return this.mGoToGamesAndCreateNewParams;
            }
        }
        
        public virtual OpenFirefoxandGotoMainPageParams OpenFirefoxandGotoMainPageParams
        {
            get
            {
                if ((this.mOpenFirefoxandGotoMainPageParams == null))
                {
                    this.mOpenFirefoxandGotoMainPageParams = new OpenFirefoxandGotoMainPageParams();
                }
                return this.mOpenFirefoxandGotoMainPageParams;
            }
        }
        
        public virtual AddNewGameParams AddNewGameParams
        {
            get
            {
                if ((this.mAddNewGameParams == null))
                {
                    this.mAddNewGameParams = new AddNewGameParams();
                }
                return this.mAddNewGameParams;
            }
        }
        
        public UIMSNPolskaOutlookSkypWindow UIMSNPolskaOutlookSkypWindow
        {
            get
            {
                if ((this.mUIMSNPolskaOutlookSkypWindow == null))
                {
                    this.mUIMSNPolskaOutlookSkypWindow = new UIMSNPolskaOutlookSkypWindow();
                }
                return this.mUIMSNPolskaOutlookSkypWindow;
            }
        }
        
        public UIAllMyASPNETApplicatiWindow UIAllMyASPNETApplicatiWindow
        {
            get
            {
                if ((this.mUIAllMyASPNETApplicatiWindow == null))
                {
                    this.mUIAllMyASPNETApplicatiWindow = new UIAllMyASPNETApplicatiWindow();
                }
                return this.mUIAllMyASPNETApplicatiWindow;
            }
        }
        
        public UIMyASPNETApplicationIWindow UIMyASPNETApplicationIWindow
        {
            get
            {
                if ((this.mUIMyASPNETApplicationIWindow == null))
                {
                    this.mUIMyASPNETApplicationIWindow = new UIMyASPNETApplicationIWindow();
                }
                return this.mUIMyASPNETApplicationIWindow;
            }
        }
        
        public UIUseUIAutomationToTesWindow UIUseUIAutomationToTesWindow
        {
            get
            {
                if ((this.mUIUseUIAutomationToTesWindow == null))
                {
                    this.mUIUseUIAutomationToTesWindow = new UIUseUIAutomationToTesWindow();
                }
                return this.mUIUseUIAutomationToTesWindow;
            }
        }
        
        public UINowakartaMozillaFireWindow UINowakartaMozillaFireWindow
        {
            get
            {
                if ((this.mUINowakartaMozillaFireWindow == null))
                {
                    this.mUINowakartaMozillaFireWindow = new UINowakartaMozillaFireWindow();
                }
                return this.mUINowakartaMozillaFireWindow;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow();
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow1 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow1();
                }
                return this.mUIItemWindow1;
            }
        }
        #endregion
        
        #region Fields
        private OpenInternetExplorerParams mOpenInternetExplorerParams;
        
        private OpenAppParams mOpenAppParams;
        
        private EditMiastoPersonParams mEditMiastoPersonParams;
        
        private OpenFirefoxParams mOpenFirefoxParams;
        
        private OpenFirefoxandGotoPageParams mOpenFirefoxandGotoPageParams;
        
        private GoToGamesAndCreateNewParams mGoToGamesAndCreateNewParams;
        
        private OpenFirefoxandGotoMainPageParams mOpenFirefoxandGotoMainPageParams;
        
        private AddNewGameParams mAddNewGameParams;
        
        private UIMSNPolskaOutlookSkypWindow mUIMSNPolskaOutlookSkypWindow;
        
        private UIAllMyASPNETApplicatiWindow mUIAllMyASPNETApplicatiWindow;
        
        private UIMyASPNETApplicationIWindow mUIMyASPNETApplicationIWindow;
        
        private UIUseUIAutomationToTesWindow mUIUseUIAutomationToTesWindow;
        
        private UINowakartaMozillaFireWindow mUINowakartaMozillaFireWindow;
        
        private UIItemWindow mUIItemWindow;
        
        private UIItemWindow1 mUIItemWindow1;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'OpenInternetExplorer'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class OpenInternetExplorerParams
    {
        
        #region Fields
        /// <summary>
        /// Go to web page 'http://go.microsoft.com/fwlink/p/?LinkId=255141' using new browser instance
        /// </summary>
        public string Url = "http://go.microsoft.com/fwlink/p/?LinkId=255141";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'OpenApp'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class OpenAppParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'http://localhost:59145/' in combo box
        /// </summary>
        public string UIItemComboBoxEditableItem = "http://localhost:59145/";
        
        /// <summary>
        /// Type '{Enter}' in 'Wprowadź adres lub szukaj' text box
        /// </summary>
        public string UIWprowadźadreslubszukEditSendKeys = "{Enter}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EditMiastoPerson'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class EditMiastoPersonParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Gdansk' in 'Miasto' text box
        /// </summary>
        public string UIMiastoEditText = "Gdansk";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'OpenFirefox'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class OpenFirefoxParams
    {
        
        #region Fields
        /// <summary>
        /// Launch '%ProgramFiles(x86)%\Mozilla Firefox\firefox.exe'
        /// </summary>
        public string UIUseUIAutomationToTesWindowExePath = "C:\\Program Files (x86)\\Mozilla Firefox\\firefox.exe";
        
        /// <summary>
        /// Launch '%ProgramFiles(x86)%\Mozilla Firefox\firefox.exe'
        /// </summary>
        public string UIUseUIAutomationToTesWindowAlternateExePath = "%ProgramFiles(x86)%\\Mozilla Firefox\\firefox.exe";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'OpenFirefoxandGotoPage'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class OpenFirefoxandGotoPageParams
    {
        
        #region Fields
        /// <summary>
        /// Launch '%ProgramFiles(x86)%\Mozilla Firefox\firefox.exe'
        /// </summary>
        public string ExePath = "C:\\Program Files (x86)\\Mozilla Firefox\\firefox.exe";
        
        /// <summary>
        /// Launch '%ProgramFiles(x86)%\Mozilla Firefox\firefox.exe'
        /// </summary>
        public string AlternateExePath = "%ProgramFiles(x86)%\\Mozilla Firefox\\firefox.exe";
        
        /// <summary>
        /// Type 'Control + v' in 'Wprowadź adres lub szukaj' text box
        /// </summary>
        public string UIWprowadźadreslubszukEditSendKeys = "v";
        
        /// <summary>
        /// Type '{Enter}' in 'Wprowadź adres lub szukaj' text box
        /// </summary>
        public string UIWprowadźadreslubszukEditSendKeys1 = "{Enter}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'GoToGamesAndCreateNew'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class GoToGamesAndCreateNewParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'CodedUITest' in 'Title' text box
        /// </summary>
        public string UITitleEditText = "CodedUITest";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'OpenFirefoxandGotoMainPage'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class OpenFirefoxandGotoMainPageParams
    {
        
        #region Fields
        /// <summary>
        /// Launch '%ProgramFiles(x86)%\Mozilla Firefox\firefox.exe'
        /// </summary>
        public string ExePath = "C:\\Program Files (x86)\\Mozilla Firefox\\firefox.exe";
        
        /// <summary>
        /// Launch '%ProgramFiles(x86)%\Mozilla Firefox\firefox.exe'
        /// </summary>
        public string AlternateExePath = "%ProgramFiles(x86)%\\Mozilla Firefox\\firefox.exe";
        
        /// <summary>
        /// Select 'localhost:59145' in combo box
        /// </summary>
        public string UIItemComboBoxEditableItem = "localhost:59145";
        
        /// <summary>
        /// Select '' in list box
        /// </summary>
        public string UIItemListSelectedItemsAsString = "";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AddNewGame'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class AddNewGameParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Coded' in 'Title' text box
        /// </summary>
        public string UITitleEditText = "Coded";
        
        /// <summary>
        /// Type '{Down}' in 'Title' text box
        /// </summary>
        public string UITitleEditSendKeys = "{Down}";
        
        /// <summary>
        /// Type '{Enter}' in 'CodedUITest CodedUITest' list item
        /// </summary>
        public string UICodedUITestCodedUITeListItemSendKeys = "{Enter}";
        
        /// <summary>
        /// Type 'CodedUITest1' in 'Title' text box
        /// </summary>
        public string UITitleEditText1 = "CodedUITest1";
        
        /// <summary>
        /// Type '{Tab}' in 'Title' text box
        /// </summary>
        public string UITitleEditSendKeys1 = "{Tab}";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIMSNPolskaOutlookSkypWindow : BrowserWindow
    {
        
        public UIMSNPolskaOutlookSkypWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "MSN Polska - Outlook, Skype, Hotmail, Messenger, Microsoft Office Online i OneDri" +
                "ve";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("MSN Polska - Outlook, Skype, Hotmail, Messenger, Microsoft Office Online i OneDri" +
                    "ve");
            this.WindowTitles.Add("ErrorPage");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIKontrolkakombiadresuToolBar UIKontrolkakombiadresuToolBar
        {
            get
            {
                if ((this.mUIKontrolkakombiadresuToolBar == null))
                {
                    this.mUIKontrolkakombiadresuToolBar = new UIKontrolkakombiadresuToolBar(this);
                }
                return this.mUIKontrolkakombiadresuToolBar;
            }
        }
        
        public UIErrorPageDocument UIErrorPageDocument
        {
            get
            {
                if ((this.mUIErrorPageDocument == null))
                {
                    this.mUIErrorPageDocument = new UIErrorPageDocument(this);
                }
                return this.mUIErrorPageDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIKontrolkakombiadresuToolBar mUIKontrolkakombiadresuToolBar;
        
        private UIErrorPageDocument mUIErrorPageDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIKontrolkakombiadresuToolBar : WinToolBar
    {
        
        public UIKontrolkakombiadresuToolBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinToolBar.PropertyNames.Name] = "Kontrolka kombi adresu";
            this.WindowTitles.Add("MSN Polska - Outlook, Skype, Hotmail, Messenger, Microsoft Office Online i OneDri" +
                    "ve");
            #endregion
        }
        
        #region Properties
        public WinMenuItem UIAdresMenuItem
        {
            get
            {
                if ((this.mUIAdresMenuItem == null))
                {
                    this.mUIAdresMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUIAdresMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Adres";
                    this.mUIAdresMenuItem.WindowTitles.Add("MSN Polska - Outlook, Skype, Hotmail, Messenger, Microsoft Office Online i OneDri" +
                            "ve");
                    #endregion
                }
                return this.mUIAdresMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WinMenuItem mUIAdresMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIErrorPageDocument : HtmlDocument
    {
        
        public UIErrorPageDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "ErrorPage";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:9098/";
            this.WindowTitles.Add("ErrorPage");
            #endregion
        }
        
        #region Properties
        public HtmlButton UIListaosóbButton
        {
            get
            {
                if ((this.mUIListaosóbButton == null))
                {
                    this.mUIListaosóbButton = new HtmlButton(this);
                    #region Search Criteria
                    this.mUIListaosóbButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUIListaosóbButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUIListaosóbButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Lista osób";
                    this.mUIListaosóbButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUIListaosóbButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIListaosóbButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-default";
                    this.mUIListaosóbButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-default\" onclick=\"locatio";
                    this.mUIListaosóbButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "1";
                    this.mUIListaosóbButton.WindowTitles.Add("ErrorPage");
                    #endregion
                }
                return this.mUIListaosóbButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlButton mUIListaosóbButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIAllMyASPNETApplicatiWindow : BrowserWindow
    {
        
        public UIAllMyASPNETApplicatiWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "All - My ASP.NET Application";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("All - My ASP.NET Application");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIAllMyASPNETApplicatiDocument UIAllMyASPNETApplicatiDocument
        {
            get
            {
                if ((this.mUIAllMyASPNETApplicatiDocument == null))
                {
                    this.mUIAllMyASPNETApplicatiDocument = new UIAllMyASPNETApplicatiDocument(this);
                }
                return this.mUIAllMyASPNETApplicatiDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIAllMyASPNETApplicatiDocument mUIAllMyASPNETApplicatiDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIAllMyASPNETApplicatiDocument : HtmlDocument
    {
        
        public UIAllMyASPNETApplicatiDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "All - My ASP.NET Application";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Person/All";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:9098/Person/All";
            this.WindowTitles.Add("All - My ASP.NET Application");
            #endregion
        }
        
        #region Properties
        public HtmlButton UISprawdźadresButton
        {
            get
            {
                if ((this.mUISprawdźadresButton == null))
                {
                    this.mUISprawdźadresButton = new HtmlButton(this);
                    #region Search Criteria
                    this.mUISprawdźadresButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUISprawdźadresButton.SearchProperties[HtmlButton.PropertyNames.Name] = "sprAdres";
                    this.mUISprawdźadresButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Sprawdź adres";
                    this.mUISprawdźadresButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUISprawdźadresButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUISprawdźadresButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-default";
                    this.mUISprawdźadresButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "name=\"sprAdres\" class=\"btn btn-default\" ";
                    this.mUISprawdźadresButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "2";
                    this.mUISprawdźadresButton.WindowTitles.Add("All - My ASP.NET Application");
                    #endregion
                }
                return this.mUISprawdźadresButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlButton mUISprawdźadresButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIMyASPNETApplicationIWindow : BrowserWindow
    {
        
        public UIMyASPNETApplicationIWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "- My ASP.NET Application";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("- My ASP.NET Application");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIMyASPNETApplicationDocument UIMyASPNETApplicationDocument
        {
            get
            {
                if ((this.mUIMyASPNETApplicationDocument == null))
                {
                    this.mUIMyASPNETApplicationDocument = new UIMyASPNETApplicationDocument(this);
                }
                return this.mUIMyASPNETApplicationDocument;
            }
        }
        
        public UIMyASPNETApplicationDocument1 UIMyASPNETApplicationDocument1
        {
            get
            {
                if ((this.mUIMyASPNETApplicationDocument1 == null))
                {
                    this.mUIMyASPNETApplicationDocument1 = new UIMyASPNETApplicationDocument1(this);
                }
                return this.mUIMyASPNETApplicationDocument1;
            }
        }
        #endregion
        
        #region Fields
        private UIMyASPNETApplicationDocument mUIMyASPNETApplicationDocument;
        
        private UIMyASPNETApplicationDocument1 mUIMyASPNETApplicationDocument1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIMyASPNETApplicationDocument : HtmlDocument
    {
        
        public UIMyASPNETApplicationDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "- My ASP.NET Application";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Adres/DisplayById/2";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:9098/Adres/DisplayById/2";
            this.WindowTitles.Add("- My ASP.NET Application");
            #endregion
        }
        
        #region Properties
        public HtmlButton UIEdytujButton
        {
            get
            {
                if ((this.mUIEdytujButton == null))
                {
                    this.mUIEdytujButton = new HtmlButton(this);
                    #region Search Criteria
                    this.mUIEdytujButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUIEdytujButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUIEdytujButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Edytuj";
                    this.mUIEdytujButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUIEdytujButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIEdytujButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-default";
                    this.mUIEdytujButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-default\" onclick=\"locatio";
                    this.mUIEdytujButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "2";
                    this.mUIEdytujButton.WindowTitles.Add("- My ASP.NET Application");
                    #endregion
                }
                return this.mUIEdytujButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlButton mUIEdytujButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIMyASPNETApplicationDocument1 : HtmlDocument
    {
        
        public UIMyASPNETApplicationDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "- My ASP.NET Application";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Adres/Edit/2";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:9098/Adres/Edit/2";
            this.WindowTitles.Add("- My ASP.NET Application");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UIMiastoEdit
        {
            get
            {
                if ((this.mUIMiastoEdit == null))
                {
                    this.mUIMiastoEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIMiastoEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "miasto";
                    this.mUIMiastoEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "miasto";
                    this.mUIMiastoEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Miasto";
                    this.mUIMiastoEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIMiastoEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIMiastoEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUIMiastoEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"miasto\" id=\"miasto\" type=\"text\" va";
                    this.mUIMiastoEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "3";
                    this.mUIMiastoEdit.WindowTitles.Add("- My ASP.NET Application");
                    #endregion
                }
                return this.mUIMiastoEdit;
            }
        }
        
        public HtmlInputButton UIZapiszButton
        {
            get
            {
                if ((this.mUIZapiszButton == null))
                {
                    this.mUIZapiszButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUIZapiszButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUIZapiszButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUIZapiszButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Zapisz";
                    this.mUIZapiszButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUIZapiszButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIZapiszButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-default";
                    this.mUIZapiszButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-default\" type=\"submit\" va";
                    this.mUIZapiszButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "8";
                    this.mUIZapiszButton.WindowTitles.Add("- My ASP.NET Application");
                    #endregion
                }
                return this.mUIZapiszButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUIMiastoEdit;
        
        private HtmlInputButton mUIZapiszButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIUseUIAutomationToTesWindow : WinWindow
    {
        
        public UIUseUIAutomationToTesWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Use UI Automation To Test Your Code - Mozilla Firefox";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "MozillaWindowClass";
            this.WindowTitles.Add("Use UI Automation To Test Your Code - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public UIUseUIAutomationToTesApplication UIUseUIAutomationToTesApplication
        {
            get
            {
                if ((this.mUIUseUIAutomationToTesApplication == null))
                {
                    this.mUIUseUIAutomationToTesApplication = new UIUseUIAutomationToTesApplication(this);
                }
                return this.mUIUseUIAutomationToTesApplication;
            }
        }
        #endregion
        
        #region Fields
        private UIUseUIAutomationToTesApplication mUIUseUIAutomationToTesApplication;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIUseUIAutomationToTesApplication : WinControl
    {
        
        public UIUseUIAutomationToTesApplication(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Use UI Automation To Test Your Code - Mozilla Firefox";
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "Application";
            this.WindowTitles.Add("Use UI Automation To Test Your Code - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinButton UIItemButton
        {
            get
            {
                if ((this.mUIItemButton == null))
                {
                    this.mUIItemButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIItemButton.SearchProperties[WinButton.PropertyNames.Instance] = "2";
                    this.mUIItemButton.WindowTitles.Add("Use UI Automation To Test Your Code - Mozilla Firefox");
                    #endregion
                }
                return this.mUIItemButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIItemButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UINowakartaMozillaFireWindow : WinWindow
    {
        
        public UINowakartaMozillaFireWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Nowa karta - Mozilla Firefox";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "MozillaWindowClass";
            this.WindowTitles.Add("Nowa karta - Mozilla Firefox");
            this.WindowTitles.Add("Home Page - GamesStudios - Mozilla Firefox");
            this.WindowTitles.Add("Index - GamesStudios - Mozilla Firefox");
            this.WindowTitles.Add("Create - GamesStudios - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinControl UINowakartaMozillaFireApplication
        {
            get
            {
                if ((this.mUINowakartaMozillaFireApplication == null))
                {
                    this.mUINowakartaMozillaFireApplication = new WinControl(this);
                    #region Search Criteria
                    this.mUINowakartaMozillaFireApplication.SearchProperties[UITestControl.PropertyNames.Name] = "Nowa karta - Mozilla Firefox";
                    this.mUINowakartaMozillaFireApplication.SearchProperties[UITestControl.PropertyNames.ControlType] = "Application";
                    this.mUINowakartaMozillaFireApplication.WindowTitles.Add("Nowa karta - Mozilla Firefox");
                    #endregion
                }
                return this.mUINowakartaMozillaFireApplication;
            }
        }
        
        public UIPaseknarzędzinawigacToolBar UIPaseknarzędzinawigacToolBar
        {
            get
            {
                if ((this.mUIPaseknarzędzinawigacToolBar == null))
                {
                    this.mUIPaseknarzędzinawigacToolBar = new UIPaseknarzędzinawigacToolBar(this);
                }
                return this.mUIPaseknarzędzinawigacToolBar;
            }
        }
        
        public UIItemComboBox UIItemComboBox
        {
            get
            {
                if ((this.mUIItemComboBox == null))
                {
                    this.mUIItemComboBox = new UIItemComboBox(this);
                }
                return this.mUIItemComboBox;
            }
        }
        
        public UIItemPropertyPage UIItemPropertyPage
        {
            get
            {
                if ((this.mUIItemPropertyPage == null))
                {
                    this.mUIItemPropertyPage = new UIItemPropertyPage(this);
                }
                return this.mUIItemPropertyPage;
            }
        }
        
        public UICreateNewHyperlink UICreateNewHyperlink
        {
            get
            {
                if ((this.mUICreateNewHyperlink == null))
                {
                    this.mUICreateNewHyperlink = new UICreateNewHyperlink(this);
                }
                return this.mUICreateNewHyperlink;
            }
        }
        
        public UICreateGamesStudiosDocument UICreateGamesStudiosDocument
        {
            get
            {
                if ((this.mUICreateGamesStudiosDocument == null))
                {
                    this.mUICreateGamesStudiosDocument = new UICreateGamesStudiosDocument(this);
                }
                return this.mUICreateGamesStudiosDocument;
            }
        }
        
        public UIHomePageGamesStudiosMoziApplication UIHomePageGamesStudiosMoziApplication
        {
            get
            {
                if ((this.mUIHomePageGamesStudiosMoziApplication == null))
                {
                    this.mUIHomePageGamesStudiosMoziApplication = new UIHomePageGamesStudiosMoziApplication(this);
                }
                return this.mUIHomePageGamesStudiosMoziApplication;
            }
        }
        
        public UIPawełLuszukProjectHyperlink UIPawełLuszukProjectHyperlink
        {
            get
            {
                if ((this.mUIPawełLuszukProjectHyperlink == null))
                {
                    this.mUIPawełLuszukProjectHyperlink = new UIPawełLuszukProjectHyperlink(this);
                }
                return this.mUIPawełLuszukProjectHyperlink;
            }
        }
        
        public UIGamesDatabaseHyperlink UIGamesDatabaseHyperlink
        {
            get
            {
                if ((this.mUIGamesDatabaseHyperlink == null))
                {
                    this.mUIGamesDatabaseHyperlink = new UIGamesDatabaseHyperlink(this);
                }
                return this.mUIGamesDatabaseHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private WinControl mUINowakartaMozillaFireApplication;
        
        private UIPaseknarzędzinawigacToolBar mUIPaseknarzędzinawigacToolBar;
        
        private UIItemComboBox mUIItemComboBox;
        
        private UIItemPropertyPage mUIItemPropertyPage;
        
        private UICreateNewHyperlink mUICreateNewHyperlink;
        
        private UICreateGamesStudiosDocument mUICreateGamesStudiosDocument;
        
        private UIHomePageGamesStudiosMoziApplication mUIHomePageGamesStudiosMoziApplication;
        
        private UIPawełLuszukProjectHyperlink mUIPawełLuszukProjectHyperlink;
        
        private UIGamesDatabaseHyperlink mUIGamesDatabaseHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPaseknarzędzinawigacToolBar : WinToolBar
    {
        
        public UIPaseknarzędzinawigacToolBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinToolBar.PropertyNames.Name] = "Pasek narzędzi nawigacyjnych";
            this.WindowTitles.Add("Nowa karta - Mozilla Firefox");
            this.WindowTitles.Add("Home Page - GamesStudios - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIItemComboBox
        {
            get
            {
                if ((this.mUIItemComboBox == null))
                {
                    this.mUIItemComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUIItemComboBox.WindowTitles.Add("Nowa karta - Mozilla Firefox");
                    this.mUIItemComboBox.WindowTitles.Add("Home Page - GamesStudios - Mozilla Firefox");
                    #endregion
                }
                return this.mUIItemComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIItemComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemComboBox : WinComboBox
    {
        
        public UIItemComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Nowa karta - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinEdit UIWprowadźadreslubszukEdit
        {
            get
            {
                if ((this.mUIWprowadźadreslubszukEdit == null))
                {
                    this.mUIWprowadźadreslubszukEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIWprowadźadreslubszukEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Wprowadź adres lub szukaj";
                    this.mUIWprowadźadreslubszukEdit.WindowTitles.Add("Nowa karta - Mozilla Firefox");
                    #endregion
                }
                return this.mUIWprowadźadreslubszukEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIWprowadźadreslubszukEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemPropertyPage : WinControl
    {
        
        public UIItemPropertyPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "PropertyPage";
            this.WindowTitles.Add("Home Page - GamesStudios - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinControl UIHomePageGamesStudiosDocument
        {
            get
            {
                if ((this.mUIHomePageGamesStudiosDocument == null))
                {
                    this.mUIHomePageGamesStudiosDocument = new WinControl(this);
                    #region Search Criteria
                    this.mUIHomePageGamesStudiosDocument.SearchProperties[UITestControl.PropertyNames.Name] = "Home Page - GamesStudios";
                    this.mUIHomePageGamesStudiosDocument.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
                    this.mUIHomePageGamesStudiosDocument.WindowTitles.Add("Home Page - GamesStudios - Mozilla Firefox");
                    #endregion
                }
                return this.mUIHomePageGamesStudiosDocument;
            }
        }
        #endregion
        
        #region Fields
        private WinControl mUIHomePageGamesStudiosDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UICreateNewHyperlink : WinHyperlink
    {
        
        public UICreateNewHyperlink(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinHyperlink.PropertyNames.Name] = "Create New";
            this.WindowTitles.Add("Index - GamesStudios - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinEdit UICreateNewEdit
        {
            get
            {
                if ((this.mUICreateNewEdit == null))
                {
                    this.mUICreateNewEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUICreateNewEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Create New";
                    this.mUICreateNewEdit.WindowTitles.Add("Index - GamesStudios - Mozilla Firefox");
                    #endregion
                }
                return this.mUICreateNewEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUICreateNewEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UICreateGamesStudiosDocument : WinControl
    {
        
        public UICreateGamesStudiosDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Create - GamesStudios";
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
            this.WindowTitles.Add("Create - GamesStudios - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinEdit UITitleEdit
        {
            get
            {
                if ((this.mUITitleEdit == null))
                {
                    this.mUITitleEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITitleEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Title";
                    this.mUITitleEdit.WindowTitles.Add("Create - GamesStudios - Mozilla Firefox");
                    #endregion
                }
                return this.mUITitleEdit;
            }
        }
        
        public WinComboBox UIGenreComboBox
        {
            get
            {
                if ((this.mUIGenreComboBox == null))
                {
                    this.mUIGenreComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUIGenreComboBox.SearchProperties[WinComboBox.PropertyNames.Name] = "Genre";
                    this.mUIGenreComboBox.WindowTitles.Add("Create - GamesStudios - Mozilla Firefox");
                    #endregion
                }
                return this.mUIGenreComboBox;
            }
        }
        
        public WinButton UICreateButton
        {
            get
            {
                if ((this.mUICreateButton == null))
                {
                    this.mUICreateButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICreateButton.SearchProperties[WinButton.PropertyNames.Name] = "Create";
                    this.mUICreateButton.WindowTitles.Add("Create - GamesStudios - Mozilla Firefox");
                    #endregion
                }
                return this.mUICreateButton;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITitleEdit;
        
        private WinComboBox mUIGenreComboBox;
        
        private WinButton mUICreateButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIHomePageGamesStudiosMoziApplication : WinControl
    {
        
        public UIHomePageGamesStudiosMoziApplication(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Home Page - GamesStudios - Mozilla Firefox";
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "Application";
            this.WindowTitles.Add("Home Page - GamesStudios - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinList UIItemList
        {
            get
            {
                if ((this.mUIItemList == null))
                {
                    this.mUIItemList = new WinList(this);
                    #region Search Criteria
                    this.mUIItemList.WindowTitles.Add("Home Page - GamesStudios - Mozilla Firefox");
                    #endregion
                }
                return this.mUIItemList;
            }
        }
        #endregion
        
        #region Fields
        private WinList mUIItemList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPawełLuszukProjectHyperlink : WinHyperlink
    {
        
        public UIPawełLuszukProjectHyperlink(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinHyperlink.PropertyNames.Name] = "Paweł Luszuk Project";
            this.WindowTitles.Add("Index - GamesStudios - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinEdit UIPawełLuszukProjectEdit
        {
            get
            {
                if ((this.mUIPawełLuszukProjectEdit == null))
                {
                    this.mUIPawełLuszukProjectEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIPawełLuszukProjectEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Paweł Luszuk Project";
                    this.mUIPawełLuszukProjectEdit.WindowTitles.Add("Index - GamesStudios - Mozilla Firefox");
                    #endregion
                }
                return this.mUIPawełLuszukProjectEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIPawełLuszukProjectEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGamesDatabaseHyperlink : WinHyperlink
    {
        
        public UIGamesDatabaseHyperlink(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinHyperlink.PropertyNames.Name] = "Game\'s Database";
            this.WindowTitles.Add("Home Page - GamesStudios - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinEdit UIGamesDatabaseEdit
        {
            get
            {
                if ((this.mUIGamesDatabaseEdit == null))
                {
                    this.mUIGamesDatabaseEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIGamesDatabaseEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Game\'s Database";
                    this.mUIGamesDatabaseEdit.WindowTitles.Add("Home Page - GamesStudios - Mozilla Firefox");
                    #endregion
                }
                return this.mUIGamesDatabaseEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIGamesDatabaseEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Genre";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "MozillaWindowClass";
            #endregion
        }
        
        #region Properties
        public WinComboBox UIGenreComboBox
        {
            get
            {
                if ((this.mUIGenreComboBox == null))
                {
                    this.mUIGenreComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUIGenreComboBox.SearchProperties[WinComboBox.PropertyNames.Name] = "Genre";
                    #endregion
                }
                return this.mUIGenreComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIGenreComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Desktop";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32769";
            #endregion
        }
        
        #region Properties
        public UIItemList UIItemList
        {
            get
            {
                if ((this.mUIItemList == null))
                {
                    this.mUIItemList = new UIItemList(this);
                }
                return this.mUIItemList;
            }
        }
        #endregion
        
        #region Fields
        private UIItemList mUIItemList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemList : WinList
    {
        
        public UIItemList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Create - GamesStudios - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinListItem UICodedUITestCodedUITeListItem
        {
            get
            {
                if ((this.mUICodedUITestCodedUITeListItem == null))
                {
                    this.mUICodedUITestCodedUITeListItem = new WinListItem(this);
                    #region Search Criteria
                    this.mUICodedUITestCodedUITeListItem.SearchProperties[WinListItem.PropertyNames.Name] = "CodedUITest CodedUITest";
                    #endregion
                }
                return this.mUICodedUITestCodedUITeListItem;
            }
        }
        #endregion
        
        #region Fields
        private WinListItem mUICodedUITestCodedUITeListItem;
        #endregion
    }
}
