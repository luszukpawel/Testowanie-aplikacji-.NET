// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 15.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CodedUITests
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// OpenInternetExplorer - Use 'OpenInternetExplorerParams' to pass parameters into this method.
        /// </summary>
        public void OpenInternetExplorer()
        {

            // Go to web page 'http://go.microsoft.com/fwlink/p/?LinkId=255141' using new browser instance
            BrowserWindow gomicrosoftcomBrowser = BrowserWindow.Launch(new System.Uri(this.OpenInternetExplorerParams.Url));
        }
        
        /// <summary>
        /// OpenApp - Use 'OpenAppParams' to pass parameters into this method.
        /// </summary>
        public void OpenApp()
        {
            #region Variable Declarations
            WinControl uINowakartaMozillaFireApplication = this.UINowakartaMozillaFireWindow.UINowakartaMozillaFireApplication;
            WinComboBox uIItemComboBox = this.UINowakartaMozillaFireWindow.UIPaseknarzędzinawigacToolBar.UIItemComboBox;
            WinEdit uIWprowadźadreslubszukEdit = this.UINowakartaMozillaFireWindow.UIItemComboBox.UIWprowadźadreslubszukEdit;
            #endregion

            // Click 'Nowa karta - Mozilla Firefox' Application
            Mouse.Click(uINowakartaMozillaFireApplication, new Point(889, 53));

            // Select 'http://localhost:59145/' in combo box
            uIItemComboBox.EditableItem = this.OpenAppParams.UIItemComboBoxEditableItem;

            // Type '{Enter}' in 'Wprowadź adres lub szukaj' text box
            Keyboard.SendKeys(uIWprowadźadreslubszukEdit, this.OpenAppParams.UIWprowadźadreslubszukEditSendKeys, ModifierKeys.None);
        }
        
        /// <summary>
        /// ListaOsobClick
        /// </summary>
        public void ListaOsobClick()
        {
            #region Variable Declarations
            HtmlButton uIListaosóbButton = this.UIMSNPolskaOutlookSkypWindow.UIErrorPageDocument.UIListaosóbButton;
            #endregion

            // Click 'Lista osób' button
            Mouse.Click(uIListaosóbButton, new Point(21, 6));
        }
        
        /// <summary>
        /// SprAdresClick
        /// </summary>
        public void SprAdresClick()
        {
            #region Variable Declarations
            HtmlButton uISprawdźadresButton = this.UIAllMyASPNETApplicatiWindow.UIAllMyASPNETApplicatiDocument.UISprawdźadresButton;
            #endregion

            // Click 'Sprawdź adres' button
            Mouse.Click(uISprawdźadresButton, new Point(30, 16));
        }
        
        /// <summary>
        /// ClickEditAdres
        /// </summary>
        public void ClickEditAdres()
        {
            #region Variable Declarations
            HtmlButton uIEdytujButton = this.UIMyASPNETApplicationIWindow.UIMyASPNETApplicationDocument.UIEdytujButton;
            #endregion

            // Click 'Edytuj' button
            Mouse.Click(uIEdytujButton, new Point(62, 26));
        }
        
        /// <summary>
        /// EditMiastoPerson - Use 'EditMiastoPersonParams' to pass parameters into this method.
        /// </summary>
        public void EditMiastoPerson()
        {
            #region Variable Declarations
            HtmlEdit uIMiastoEdit = this.UIMyASPNETApplicationIWindow.UIMyASPNETApplicationDocument1.UIMiastoEdit;
            #endregion

            // Type 'Gdansk' in 'Miasto' text box
            uIMiastoEdit.Text = this.EditMiastoPersonParams.UIMiastoEditText;
        }
        
        /// <summary>
        /// SaveAdresPersonClick
        /// </summary>
        public void SaveAdresPersonClick()
        {
            #region Variable Declarations
            HtmlInputButton uIZapiszButton = this.UIMyASPNETApplicationIWindow.UIMyASPNETApplicationDocument1.UIZapiszButton;
            #endregion

            // Click 'Zapisz' button
            Mouse.Click(uIZapiszButton, new Point(55, 34));
        }
        
        /// <summary>
        /// OpenFirefox - Use 'OpenFirefoxParams' to pass parameters into this method.
        /// </summary>
        public void OpenFirefox()
        {
            #region Variable Declarations
            WinButton uIItemButton = this.UIUseUIAutomationToTesWindow.UIUseUIAutomationToTesApplication.UIItemButton;
            #endregion

            // Launch '%ProgramFiles(x86)%\Mozilla Firefox\firefox.exe'
            ApplicationUnderTest uIUseUIAutomationToTesWindow = ApplicationUnderTest.Launch(this.OpenFirefoxParams.UIUseUIAutomationToTesWindowExePath, this.OpenFirefoxParams.UIUseUIAutomationToTesWindowAlternateExePath);

            // Click button numbered 2 in 'Use UI Automation To Test Your Code - Mozilla Fire...' Application
            Mouse.Click(uIItemButton, new Point(25, 22));
        }
        
        /// <summary>
        /// OpenFirefoxandGotoPage - Use 'OpenFirefoxandGotoPageParams' to pass parameters into this method.
        /// </summary>
        public void OpenFirefoxandGotoPage()
        {
            #region Variable Declarations
            WinEdit uIWprowadźadreslubszukEdit = this.UINowakartaMozillaFireWindow.UIItemComboBox.UIWprowadźadreslubszukEdit;
            #endregion

            // Launch '%ProgramFiles(x86)%\Mozilla Firefox\firefox.exe'
            ApplicationUnderTest firefoxApplication = ApplicationUnderTest.Launch(this.OpenFirefoxandGotoPageParams.ExePath, this.OpenFirefoxandGotoPageParams.AlternateExePath);

            // Click 'Wprowadź adres lub szukaj' text box
            Mouse.Click(uIWprowadźadreslubszukEdit, new Point(603, 10));

            // Type 'Control + v' in 'Wprowadź adres lub szukaj' text box
            Keyboard.SendKeys(uIWprowadźadreslubszukEdit, this.OpenFirefoxandGotoPageParams.UIWprowadźadreslubszukEditSendKeys, ModifierKeys.Control);

            // Type '{Enter}' in 'Wprowadź adres lub szukaj' text box
            Keyboard.SendKeys(uIWprowadźadreslubszukEdit, this.OpenFirefoxandGotoPageParams.UIWprowadźadreslubszukEditSendKeys1, ModifierKeys.None);
        }
        
        /// <summary>
        /// GoToGamesAndCreateNew - Use 'GoToGamesAndCreateNewParams' to pass parameters into this method.
        /// </summary>
        public void GoToGamesAndCreateNew()
        {
            #region Variable Declarations
            WinControl uIHomePageGamesStudiosDocument = this.UINowakartaMozillaFireWindow.UIItemPropertyPage.UIHomePageGamesStudiosDocument;
            WinEdit uICreateNewEdit = this.UINowakartaMozillaFireWindow.UICreateNewHyperlink.UICreateNewEdit;
            WinEdit uITitleEdit = this.UINowakartaMozillaFireWindow.UICreateGamesStudiosDocument.UITitleEdit;
            WinComboBox uIGenreComboBox = this.UINowakartaMozillaFireWindow.UICreateGamesStudiosDocument.UIGenreComboBox;
            WinComboBox uIGenreComboBox1 = this.UIItemWindow.UIGenreComboBox;
            WinButton uICreateButton = this.UINowakartaMozillaFireWindow.UICreateGamesStudiosDocument.UICreateButton;
            #endregion

            // Click 'Home Page - GamesStudios' document
            Mouse.Click(uIHomePageGamesStudiosDocument, new Point(941, 33));

            // Click 'Create New' text box
            Mouse.Click(uICreateNewEdit, new Point(47, 5));

            // Type 'CodedUITest' in 'Title' text box
            uITitleEdit.Text = this.GoToGamesAndCreateNewParams.UITitleEditText;

            // Click 'Genre' combo box
            Mouse.Click(uIGenreComboBox, new Point(327, 25));

            // Click 'Genre' combo box
            Mouse.Click(uIGenreComboBox1, new Point(234, 59));

            // Click 'Create' button
            Mouse.Click(uICreateButton, new Point(50, 27));
        }
        
        /// <summary>
        /// OpenFirefoxandGotoMainPage - Use 'OpenFirefoxandGotoMainPageParams' to pass parameters into this method.
        /// </summary>
        public void OpenFirefoxandGotoMainPage()
        {
            #region Variable Declarations
            WinComboBox uIItemComboBox = this.UINowakartaMozillaFireWindow.UIPaseknarzędzinawigacToolBar.UIItemComboBox;
            WinList uIItemList = this.UINowakartaMozillaFireWindow.UIHomePageGamesStudiosMoziApplication.UIItemList;
            WinEdit uIWprowadźadreslubszukEdit = this.UINowakartaMozillaFireWindow.UIItemComboBox.UIWprowadźadreslubszukEdit;
            WinEdit uIPawełLuszukProjectEdit = this.UINowakartaMozillaFireWindow.UIPawełLuszukProjectHyperlink.UIPawełLuszukProjectEdit;
            #endregion

            // Launch '%ProgramFiles(x86)%\Mozilla Firefox\firefox.exe'
            ApplicationUnderTest firefoxApplication = ApplicationUnderTest.Launch(this.OpenFirefoxandGotoMainPageParams.ExePath, this.OpenFirefoxandGotoMainPageParams.AlternateExePath);

            // Select 'localhost:59145' in combo box
            uIItemComboBox.EditableItem = this.OpenFirefoxandGotoMainPageParams.UIItemComboBoxEditableItem;

            // Select '' in list box
            uIItemList.SelectedItemsAsString = this.OpenFirefoxandGotoMainPageParams.UIItemListSelectedItemsAsString;

            // Double-Click 'Wprowadź adres lub szukaj' text box
            Mouse.DoubleClick(uIWprowadźadreslubszukEdit, new Point(375, 11));

            // Click 'Paweł Luszuk Project' text box
            Mouse.Click(uIPawełLuszukProjectEdit, new Point(124, 14));
        }
        
        /// <summary>
        /// AddNewGame - Use 'AddNewGameParams' to pass parameters into this method.
        /// </summary>
        public void AddNewGame()
        {
            #region Variable Declarations
            WinEdit uIGamesDatabaseEdit = this.UINowakartaMozillaFireWindow.UIGamesDatabaseHyperlink.UIGamesDatabaseEdit;
            WinEdit uICreateNewEdit = this.UINowakartaMozillaFireWindow.UICreateNewHyperlink.UICreateNewEdit;
            WinEdit uITitleEdit = this.UINowakartaMozillaFireWindow.UICreateGamesStudiosDocument.UITitleEdit;
            WinListItem uICodedUITestCodedUITeListItem = this.UIItemWindow1.UIItemList.UICodedUITestCodedUITeListItem;
            WinComboBox uIGenreComboBox = this.UINowakartaMozillaFireWindow.UICreateGamesStudiosDocument.UIGenreComboBox;
            WinComboBox uIGenreComboBox1 = this.UIItemWindow.UIGenreComboBox;
            WinButton uICreateButton = this.UINowakartaMozillaFireWindow.UICreateGamesStudiosDocument.UICreateButton;
            #endregion

            // Click 'Game's Database' text box
            Mouse.Click(uIGamesDatabaseEdit, new Point(28, 5));

            // Click 'Create New' text box
            Mouse.Click(uICreateNewEdit, new Point(35, 6));

            // Type 'Coded' in 'Title' text box
            uITitleEdit.Text = this.AddNewGameParams.UITitleEditText;

            // Type '{Down}' in 'Title' text box
            Keyboard.SendKeys(uITitleEdit, this.AddNewGameParams.UITitleEditSendKeys, ModifierKeys.None);

            // Type '{Enter}' in 'CodedUITest CodedUITest' list item
            Keyboard.SendKeys(uICodedUITestCodedUITeListItem, this.AddNewGameParams.UICodedUITestCodedUITeListItemSendKeys, ModifierKeys.None);

            // Type 'CodedUITest1' in 'Title' text box
            uITitleEdit.Text = this.AddNewGameParams.UITitleEditText1;

            // Type '{Tab}' in 'Title' text box
            Keyboard.SendKeys(uITitleEdit, this.AddNewGameParams.UITitleEditSendKeys1, ModifierKeys.None);

            // Click 'Genre' combo box
            Mouse.Click(uIGenreComboBox, new Point(331, 17));

            // Click 'Genre' combo box
            Mouse.Click(uIGenreComboBox1, new Point(275, 99));

            // Click 'Create' button
            Mouse.Click(uICreateButton, new Point(29, 16));
        }
        
        /// <summary>
        /// kalktest
        /// </summary>
        public void kalktest()
        {
            #region Variable Declarations
            WinButton uISearchWindowsButton = this.UISearchWindowsWindow.UISearchWindowsButton;
            #endregion

            // Click 'Search Windows' button
            Mouse.Click(uISearchWindowsButton, new Point(23, 23));

            // To test Windows Store apps, use the Coded UI Test project template for Windows Store apps under the Windows Store node.

            // To test Windows Store apps, use the Coded UI Test project template for Windows Store apps under the Windows Store node.

            // To test Windows Store apps, use the Coded UI Test project template for Windows Store apps under the Windows Store node.

            // To test Windows Store apps, use the Coded UI Test project template for Windows Store apps under the Windows Store node.

            // To test Windows Store apps, use the Coded UI Test project template for Windows Store apps under the Windows Store node.

            // To test Windows Store apps, use the Coded UI Test project template for Windows Store apps under the Windows Store node.

            // To test Windows Store apps, use the Coded UI Test project template for Windows Store apps under the Windows Store node.

            // To test Windows Store apps, use the Coded UI Test project template for Windows Store apps under the Windows Store node.

            // To test Windows Store apps, use the Coded UI Test project template for Windows Store apps under the Windows Store node.

            // To test Windows Store apps, use the Coded UI Test project template for Windows Store apps under the Windows Store node.

            // To test Windows Store apps, use the Coded UI Test project template for Windows Store apps under the Windows Store node.

            // To test Windows Store apps, use the Coded UI Test project template for Windows Store apps under the Windows Store node.

            // To test Windows Store apps, use the Coded UI Test project template for Windows Store apps under the Windows Store node.

            // To test Windows Store apps, use the Coded UI Test project template for Windows Store apps under the Windows Store node.

            // To test Windows Store apps, use the Coded UI Test project template for Windows Store apps under the Windows Store node.
        }
        
        /// <summary>
        /// kalk2 - Use 'kalk2Params' to pass parameters into this method.
        /// </summary>
        public void kalk2()
        {

            // Launch '%ProgramW6432%\WindowsApps\Microsoft.WindowsCalculator_10.1703.601.0_x64__8wekyb3d8bbwe\Calculator.exe' with arguments '-ServerName:App.AppXsm3pg4n7er43kdh1qp4e79f1j7am68r8.mca'
            ApplicationUnderTest calculatorApplication = ApplicationUnderTest.Launch(this.kalk2Params.ExePath, this.kalk2Params.AlternateExePath, "-ServerName:App.AppXsm3pg4n7er43kdh1qp4e79f1j7am68r8.mca");

            // To test Windows Store apps, use the Coded UI Test project template for Windows Store apps under the Windows Store node.

            // To test Windows Store apps, use the Coded UI Test project template for Windows Store apps under the Windows Store node.

            // To test Windows Store apps, use the Coded UI Test project template for Windows Store apps under the Windows Store node.

            // To test Windows Store apps, use the Coded UI Test project template for Windows Store apps under the Windows Store node.

            // To test Windows Store apps, use the Coded UI Test project template for Windows Store apps under the Windows Store node.

            // To test Windows Store apps, use the Coded UI Test project template for Windows Store apps under the Windows Store node.

            // To test Windows Store apps, use the Coded UI Test project template for Windows Store apps under the Windows Store node.

            // To test Windows Store apps, use the Coded UI Test project template for Windows Store apps under the Windows Store node.

            // To test Windows Store apps, use the Coded UI Test project template for Windows Store apps under the Windows Store node.

            // To test Windows Store apps, use the Coded UI Test project template for Windows Store apps under the Windows Store node.
        }
        
        /// <summary>
        /// mozilla
        /// </summary>
        public void mozilla()
        {
            #region Variable Declarations
            WinButton uICloseButton = this.UIAktualizacjaaplikacjWindow.UIAktualizacjaaplikacjTitleBar.UICloseButton;
            WinListItem uIMozillaFirefoxListItem = this.UIProgramManagerWindow.UIDesktopList.UIMozillaFirefoxListItem;
            #endregion

            // Click 'Close' button
            Mouse.Click(uICloseButton, new Point(28, 10));

            // Double-Click 'Mozilla Firefox' list item
            Mouse.DoubleClick(uIMozillaFirefoxListItem, new Point(22, 18));
        }
        
        /// <summary>
        /// XD - Use 'XDParams' to pass parameters into this method.
        /// </summary>
        public void XD()
        {
            #region Variable Declarations
            WinComboBox uIItemComboBox = this.UIStronastartowaprograWindow.UIPaseknarzędzinawigacToolBar.UIItemComboBox;
            WinListItem uIUGoogleWyszukiwanieListItem = this.UIItemWindow1.UIItemList.UIUGoogleWyszukiwanieListItem;
            WinEdit uIWprowadźadreslubszukEdit = this.UIStronastartowaprograWindow.UIItemComboBox.UIWprowadźadreslubszukEdit;
            #endregion

            // Launch '%ProgramFiles(x86)%\Mozilla Firefox\firefox.exe'
            ApplicationUnderTest firefoxApplication = ApplicationUnderTest.Launch(this.XDParams.ExePath, this.XDParams.AlternateExePath);

            // Select 'U' in combo box
            uIItemComboBox.EditableItem = this.XDParams.UIItemComboBoxEditableItem;

            // Type '{Back}' in 'U Google Wyszukiwanie' list item
            Keyboard.SendKeys(uIUGoogleWyszukiwanieListItem, this.XDParams.UIUGoogleWyszukiwanieListItemSendKeys, ModifierKeys.None);

            // Select 'CODEDUI' in combo box
            uIItemComboBox.EditableItem = this.XDParams.UIItemComboBoxEditableItem1;

            // Type '{Enter}' in 'Wprowadź adres lub szukaj' text box
            Keyboard.SendKeys(uIWprowadźadreslubszukEdit, this.XDParams.UIWprowadźadreslubszukEditSendKeys, ModifierKeys.None);

            // Last mouse action was not recorded.
        }
        
        /// <summary>
        /// TEST1 - Use 'TEST1Params' to pass parameters into this method.
        /// </summary>
        public void TEST1()
        {
            #region Variable Declarations
            HtmlHyperlink uICreateNewHyperlink = this.UIMSNPolskaOutlookSkypWindow.UIIndexGamesStudiosDocument1.UICreateNewHyperlink;
            HtmlEdit uINameEdit = this.UIMSNPolskaOutlookSkypWindow.UICreateGamesStudiosDocument1.UINameEdit;
            HtmlInputButton uICreateButton = this.UIMSNPolskaOutlookSkypWindow.UICreateGamesStudiosDocument1.UICreateButton;
            #endregion

            // Click 'Create New' link
            Mouse.Click(uICreateNewHyperlink, new Point(26, 4));

            // Type 'xd' in 'Name' text box
            uINameEdit.Text = this.TEST1Params.UINameEditText;

            // Click 'Create' button
            Mouse.Click(uICreateButton, new Point(32, 20));
        }
        
        /// <summary>
        /// infugedu - Use 'infugeduParams' to pass parameters into this method.
        /// </summary>
        public void infugedu()
        {
            #region Variable Declarations
            WinComboBox uIItemComboBox = this.UIStronastartowaprograWindow.UIPaseknarzędzinawigacToolBar.UIItemComboBox;
            WinList uIItemList = this.UIStronastartowaprograWindow.UIMozillaFirefoxApplication.UIItemList;
            WinEdit uIDlakierunkustudiówEdit = this.UIStronastartowaprograWindow.UIDlakierunkustudiówHyperlink.UIDlakierunkustudiówEdit;
            WinEdit uIInformatykaIIIrokEdit = this.UIStronastartowaprograWindow.UIInformatykaIIIrokHyperlink.UIInformatykaIIIrokEdit;
            #endregion

            // Launch '%ProgramFiles(x86)%\Mozilla Firefox\firefox.exe'
            ApplicationUnderTest firefoxApplication = ApplicationUnderTest.Launch(this.infugeduParams.ExePath, this.infugeduParams.AlternateExePath);

            // Element not available

            // Select 'https://inf.ug.edu.pl/aktualnosci' in combo box
            uIItemComboBox.EditableItem = this.infugeduParams.UIItemComboBoxEditableItem;

            // Select '' in list box
            uIItemList.SelectedItemsAsString = this.infugeduParams.UIItemListSelectedItemsAsString;

            // Click 'dla kierunku studiów' text box
            Mouse.Click(uIDlakierunkustudiówEdit, new Point(125, 9));

            // Click 'informatyka: III rok' text box
            Mouse.Click(uIInformatykaIIIrokEdit, new Point(10, 3));
        }
        
        /// <summary>
        /// Edgetest - Use 'EdgetestParams' to pass parameters into this method.
        /// </summary>
        public void Edgetest()
        {

            // Launch '%windir%\SystemApps\Microsoft.MicrosoftEdge_8wekyb3d8bbwe\MicrosoftEdge.exe' with arguments '-ServerName:MicrosoftEdge.AppXdnhjhccw3zf0j06tkg3jtqr00qdm0khc.mca'
            ApplicationUnderTest microsoftEdgeApplication = ApplicationUnderTest.Launch(this.EdgetestParams.ExePath, this.EdgetestParams.AlternateExePath, "-ServerName:MicrosoftEdge.AppXdnhjhccw3zf0j06tkg3jtqr00qdm0khc.mca");

            // To test Windows Store apps, use the Coded UI Test project template for Windows Store apps under the Windows Store node.

            // To test Windows Store apps, use the Coded UI Test project template for Windows Store apps under the Windows Store node.

            // To test Windows Store apps, use the Coded UI Test project template for Windows Store apps under the Windows Store node.

            // To test Windows Store apps, use the Coded UI Test project template for Windows Store apps under the Windows Store node.

            // To test Windows Store apps, use the Coded UI Test project template for Windows Store apps under the Windows Store node.

            // To test Windows Store apps, use the Coded UI Test project template for Windows Store apps under the Windows Store node.

            // To test Windows Store apps, use the Coded UI Test project template for Windows Store apps under the Windows Store node.

            // To test Windows Store apps, use the Coded UI Test project template for Windows Store apps under the Windows Store node.

            // To test Windows Store apps, use the Coded UI Test project template for Windows Store apps under the Windows Store node.

            // To test Windows Store apps, use the Coded UI Test project template for Windows Store apps under the Windows Store node.

            // To test Windows Store apps, use the Coded UI Test project template for Windows Store apps under the Windows Store node.

            // To test Windows Store apps, use the Coded UI Test project template for Windows Store apps under the Windows Store node.

            // To test Windows Store apps, use the Coded UI Test project template for Windows Store apps under the Windows Store node.

            // To test Windows Store apps, use the Coded UI Test project template for Windows Store apps under the Windows Store node.

            // To test Windows Store apps, use the Coded UI Test project template for Windows Store apps under the Windows Store node.

            // To test Windows Store apps, use the Coded UI Test project template for Windows Store apps under the Windows Store node.

            // To test Windows Store apps, use the Coded UI Test project template for Windows Store apps under the Windows Store node.

            // To test Windows Store apps, use the Coded UI Test project template for Windows Store apps under the Windows Store node.

            // To test Windows Store apps, use the Coded UI Test project template for Windows Store apps under the Windows Store node.

            // To test Windows Store apps, use the Coded UI Test project template for Windows Store apps under the Windows Store node.

            // To test Windows Store apps, use the Coded UI Test project template for Windows Store apps under the Windows Store node.
        }
        
        /// <summary>
        /// ExplorerTest - Use 'ExplorerTestParams' to pass parameters into this method.
        /// </summary>
        public void ExplorerTest()
        {
            #region Variable Declarations
            HtmlDiv uIBanner1_homepage_02dPane = this.UIMSNPolskaOutlookSkypWindow.UIMSNPolskaOutlookSkypDocument.UIBanner1_homepage_02dPane;
            HtmlHyperlink uIOfficeHyperlink = this.UIMSNPolskaOutlookSkypWindow.UIMSNPolskaOutlookSkypDocument.UIMainCustom.UIOfficeHyperlink;
            HtmlCustom uIHeadercommonCustom = this.UIMSNPolskaOutlookSkypWindow.UIMSNPolskaOutlookSkypDocument.UIHeadercommonCustom;
            HtmlEdit uIQEdit = this.UIMSNPolskaOutlookSkypWindow.UIMSNPolskaOutlookSkypDocument.UIQEdit;
            HtmlHyperlink uIFacebookHyperlink = this.UIMSNPolskaOutlookSkypWindow.UIMSNPolskaOutlookSkypDocument.UIMainCustom.UIFacebookHyperlink;
            HtmlEdit uIFirstnameEdit = this.UIMSNPolskaOutlookSkypWindow.UIWitamynaFacebookuZalDocument.UIFirstnameEdit;
            HtmlEdit uILastnameEdit = this.UIMSNPolskaOutlookSkypWindow.UIWitamynaFacebookuZalDocument.UILastnameEdit;
            HtmlEdit uIReg_email__Edit = this.UIMSNPolskaOutlookSkypWindow.UIWitamynaFacebookuZalDocument.UIReg_email__Edit;
            #endregion

            // Go to web page 'http://go.microsoft.com/fwlink/p/?LinkId=255141' using new browser instance
            this.UIMSNPolskaOutlookSkypWindow.LaunchUrl(new System.Uri(this.ExplorerTestParams.UIMSNPolskaOutlookSkypWindowUrl));

            // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Mouse hover 'banner1_homepage_02d5ea88-a2b5-4ac6-9560-7c3f4dc04...' pane at (1, 1)
            Mouse.Hover(uIBanner1_homepage_02dPane, new Point(1, 1));

            // Mouse hover 'Office' link at (1, 1)
            Mouse.Hover(uIOfficeHyperlink, new Point(1, 1));

            // Mouse hover 'header-common' custom control at (1, 1)
            Mouse.Hover(uIHeadercommonCustom, new Point(1, 1));

            // Mouse hover 'q' text box at (1, 1)
            Mouse.Hover(uIQEdit, new Point(1, 1));

            // Reset flag to ensure that play back stops if there is an error.
            Playback.PlaybackSettings.ContinueOnError = false;

            // Click 'Facebook' link
            Mouse.Click(uIFacebookHyperlink, new Point(31, 21));

            // Type 'xd' in 'firstname' text box
            uIFirstnameEdit.Text = this.ExplorerTestParams.UIFirstnameEditText;

            // Type 'xd' in 'lastname' text box
            uILastnameEdit.Text = this.ExplorerTestParams.UILastnameEditText;

            // Type 'xd' in 'reg_email__' text box
            uIReg_email__Edit.Text = this.ExplorerTestParams.UIReg_email__EditText;
        }
        
        /// <summary>
        /// ASDXD - Use 'ASDXDParams' to pass parameters into this method.
        /// </summary>
        public void ASDXD()
        {
            #region Variable Declarations
            HtmlEdit uIQEdit = this.UIMSNPolskaOutlookSkypWindow.UIMSNPolskaOutlookSkypDocument.UIQEdit;
            HtmlDiv uIB_contentPane = this.UIMSNPolskaOutlookSkypWindow.UIXDBingDocument.UIB_contentPane;
            HtmlHyperlink uIDisneyXDOficjalnastrHyperlink = this.UIMSNPolskaOutlookSkypWindow.UIXDBingDocument.UIB_resultsCustom.UIDisneyXDOficjalnastrHyperlink;
            #endregion

            // Go to web page 'http://go.microsoft.com/fwlink/p/?LinkId=255141' using new browser instance
            this.UIMSNPolskaOutlookSkypWindow.LaunchUrl(new System.Uri(this.ASDXDParams.UIMSNPolskaOutlookSkypWindowUrl));

            // Type 'XD' in 'q' text box
            uIQEdit.Text = this.ASDXDParams.UIQEditText;

            // Type '{Enter}' in 'q' text box
            Keyboard.SendKeys(uIQEdit, this.ASDXDParams.UIQEditSendKeys, ModifierKeys.None);

            // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Mouse hover 'b_content' pane at (1, 1)
            Mouse.Hover(uIB_contentPane, new Point(1, 1));

            // Reset flag to ensure that play back stops if there is an error.
            Playback.PlaybackSettings.ContinueOnError = false;

            // Click 'Disney XD - Oficjalna strona Disney XD w Polsce' link
            Mouse.Click(uIDisneyXDOficjalnastrHyperlink, new Point(290, 11));
        }
        
        /// <summary>
        /// AddNewGenre - Use 'AddNewGenreParams' to pass parameters into this method.
        /// </summary>
        public void AddNewGenre()
        {
            #region Variable Declarations
            HtmlHyperlink uIGenresDatabaseHyperlink = this.UIMSNPolskaOutlookSkypWindow.UIHomePageGamesStudiosDocument.UIGenresDatabaseHyperlink;
            HtmlHyperlink uICreateNewHyperlink = this.UIMSNPolskaOutlookSkypWindow.UIIndexGamesStudiosDocument.UICreateNewHyperlink;
            HtmlEdit uIGenreNameEdit = this.UIMSNPolskaOutlookSkypWindow.UICreateGamesStudiosDocument.UIGenreNameEdit;
            HtmlInputButton uICreateButton = this.UIMSNPolskaOutlookSkypWindow.UICreateGamesStudiosDocument.UICreateButton;
            #endregion

            // Go to web page 'http://localhost:59145/' using new browser instance
            this.UIMSNPolskaOutlookSkypWindow.LaunchUrl(new System.Uri(this.AddNewGenreParams.UIMSNPolskaOutlookSkypWindowUrl));

            // Click 'Genre's Database' link
            Mouse.Click(uIGenresDatabaseHyperlink, new Point(75, 27));

            // Click 'Create New' link
            Mouse.Click(uICreateNewHyperlink, new Point(26, 9));

            // Type 'codeduitest1' in 'Genre Name' text box
            uIGenreNameEdit.Text = this.AddNewGenreParams.UIGenreNameEditText;

            // Click 'Create' button
            Mouse.Click(uICreateButton, new Point(30, 21));

            // Type 'codeduitest' in 'Genre Name' text box
            uIGenreNameEdit.Text = this.AddNewGenreParams.UIGenreNameEditText1;

            // Click 'Create' button
            Mouse.Click(uICreateButton, new Point(46, 15));
        }
        
        /// <summary>
        /// CodedUIAddNewGame - Use 'CodedUIAddNewGameParams' to pass parameters into this method.
        /// </summary>
        public void CodedUIAddNewGame()
        {
            #region Variable Declarations
            HtmlHyperlink uIOutlookcomHyperlink = this.UIMSNPolskaOutlookSkypWindow.UIMSNPolskaOutlookSkypDocument.UIMainCustom.UIOutlookcomHyperlink;
            HtmlHyperlink uISklepHyperlink = this.UIMSNPolskaOutlookSkypWindow.UIMSNPolskaOutlookSkypDocument.UIMainCustom.UISklepHyperlink;
            HtmlCustom uIHeadercommonCustom = this.UIMSNPolskaOutlookSkypWindow.UIMSNPolskaOutlookSkypDocument.UIHeadercommonCustom;
            BrowserWindow uIMSNPolskaOutlookSkypWindow = this.UIMSNPolskaOutlookSkypWindow;
            HtmlHyperlink uIGamesDatabaseHyperlink = this.UIMSNPolskaOutlookSkypWindow.UIHomePageGamesStudiosDocument.UIGamesDatabaseHyperlink;
            HtmlHyperlink uICreateNewHyperlink = this.UIMSNPolskaOutlookSkypWindow.UIIndexGamesStudiosDocument1.UICreateNewHyperlink;
            HtmlEdit uITitleEdit = this.UIMSNPolskaOutlookSkypWindow.UICreateGamesStudiosDocument1.UITitleEdit;
            HtmlInputButton uICreateButton = this.UIMSNPolskaOutlookSkypWindow.UICreateGamesStudiosDocument1.UICreateButton;
            #endregion

            // Go to web page 'http://go.microsoft.com/fwlink/p/?LinkId=255141' using new browser instance
            this.UIMSNPolskaOutlookSkypWindow.LaunchUrl(new System.Uri(this.CodedUIAddNewGameParams.UIMSNPolskaOutlookSkypWindowUrl));

            // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Mouse hover 'Outlook.com' link at (1, 1)
            Mouse.Hover(uIOutlookcomHyperlink, new Point(1, 1));

            // Mouse hover 'Sklep' link at (1, 1)
            Mouse.Hover(uISklepHyperlink, new Point(1, 1));

            // Mouse hover 'header-common' custom control at (1, 1)
            Mouse.Hover(uIHeadercommonCustom, new Point(1, 1));

            // Reset flag to ensure that play back stops if there is an error.
            Playback.PlaybackSettings.ContinueOnError = false;

            // Go to web page 'http://localhost:59145/'
            uIMSNPolskaOutlookSkypWindow.NavigateToUrl(new System.Uri(this.CodedUIAddNewGameParams.UIMSNPolskaOutlookSkypWindowUrl1));

            // Click 'Game's Database' link
            Mouse.Click(uIGamesDatabaseHyperlink, new Point(52, 25));

            // Click 'Create New' link
            Mouse.Click(uICreateNewHyperlink, new Point(44, 9));

            // Type 'codedUItest2' in 'Title' text box
            uITitleEdit.Text = this.CodedUIAddNewGameParams.UITitleEditText;

            // Click 'Create' button
            Mouse.Click(uICreateButton, new Point(50, 22));
        }
        
        /// <summary>
        /// CodedUiDeleteGame - Use 'CodedUiDeleteGameParams' to pass parameters into this method.
        /// </summary>
        public void CodedUiDeleteGame()
        {
            #region Variable Declarations
            HtmlHyperlink uIGamesDatabaseHyperlink = this.UIMSNPolskaOutlookSkypWindow.UIHomePageGamesStudiosDocument.UIGamesDatabaseHyperlink;
            HtmlHyperlink uICreateNewHyperlink = this.UIMSNPolskaOutlookSkypWindow.UIIndexGamesStudiosDocument1.UICreateNewHyperlink;
            HtmlEdit uITitleEdit = this.UIMSNPolskaOutlookSkypWindow.UICreateGamesStudiosDocument1.UITitleEdit;
            HtmlInputButton uICreateButton = this.UIMSNPolskaOutlookSkypWindow.UICreateGamesStudiosDocument1.UICreateButton;
            HtmlHyperlink uIDeleteHyperlink = this.UIMSNPolskaOutlookSkypWindow.UIIndexGamesStudiosDocument1.UIDeleteHyperlink;
            HtmlInputButton uIDeleteButton = this.UIMSNPolskaOutlookSkypWindow.UIDeleteGamesStudiosDocument.UIDeleteButton;
            #endregion

            // Go to web page 'http://localhost:59145/' using new browser instance
            this.UIMSNPolskaOutlookSkypWindow.LaunchUrl(new System.Uri(this.CodedUiDeleteGameParams.UIMSNPolskaOutlookSkypWindowUrl));

            // Click 'Game's Database' link
            Mouse.Click(uIGamesDatabaseHyperlink, new Point(110, 16));

            // Click 'Create New' link
            Mouse.Click(uICreateNewHyperlink, new Point(39, 9));

            // Type 'GameToDelete' in 'Title' text box
            uITitleEdit.Text = this.CodedUiDeleteGameParams.UITitleEditText;

            // Click 'Create' button
            Mouse.Click(uICreateButton, new Point(20, 27));

            // Click 'Delete' link
            Mouse.Click(uIDeleteHyperlink, new Point(20, 9));

            // Click 'Delete' button
            Mouse.Click(uIDeleteButton, new Point(21, 15));
        }
        
        /// <summary>
        /// CodedUiUpdeteGame - Use 'CodedUiUpdeteGameParams' to pass parameters into this method.
        /// </summary>
        public void CodedUiUpdeteGame()
        {
            #region Variable Declarations
            HtmlHyperlink uIGamesDatabaseHyperlink = this.UIMSNPolskaOutlookSkypWindow.UIHomePageGamesStudiosDocument.UIGamesDatabaseHyperlink;
            HtmlHyperlink uICreateNewHyperlink = this.UIMSNPolskaOutlookSkypWindow.UIIndexGamesStudiosDocument1.UICreateNewHyperlink;
            HtmlEdit uITitleEdit = this.UIMSNPolskaOutlookSkypWindow.UICreateGamesStudiosDocument1.UITitleEdit;
            HtmlComboBox uIGenreComboBox = this.UIMSNPolskaOutlookSkypWindow.UICreateGamesStudiosDocument1.UIGenreComboBox;
            HtmlInputButton uICreateButton = this.UIMSNPolskaOutlookSkypWindow.UICreateGamesStudiosDocument1.UICreateButton;
            HtmlHyperlink uIEditHyperlink = this.UIMSNPolskaOutlookSkypWindow.UIIndexGamesStudiosDocument1.UIEditHyperlink;
            HtmlEdit uITitleEdit1 = this.UIMSNPolskaOutlookSkypWindow.UIEditGamesStudiosDocument.UITitleEdit;
            HtmlInputButton uISaveButton = this.UIMSNPolskaOutlookSkypWindow.UIEditGamesStudiosDocument.UISaveButton;
            #endregion

            // Go to web page 'http://localhost:59145/' using new browser instance
            this.UIMSNPolskaOutlookSkypWindow.LaunchUrl(new System.Uri(this.CodedUiUpdeteGameParams.UIMSNPolskaOutlookSkypWindowUrl));

            // Click 'Game's Database' link
            Mouse.Click(uIGamesDatabaseHyperlink, new Point(77, 25));

            // Click 'Create New' link
            Mouse.Click(uICreateNewHyperlink, new Point(47, 12));

            // Type 'GameToUpdate' in 'Title' text box
            uITitleEdit.Text = this.CodedUiUpdeteGameParams.UITitleEditText;

            // Select 'codeduitest' in 'Genre' combo box
            uIGenreComboBox.SelectedItem = this.CodedUiUpdeteGameParams.UIGenreComboBoxSelectedItem;

            // Click 'Create' button
            Mouse.Click(uICreateButton, new Point(45, 20));

            // Click 'Edit' link
            Mouse.Click(uIEditHyperlink, new Point(17, 9));

            // Type 'GameAfterUpdate' in 'Title' text box
            uITitleEdit1.Text = this.CodedUiUpdeteGameParams.UITitleEditText1;

            // Click 'Save' button
            Mouse.Click(uISaveButton, new Point(38, 20));
        }
        
        /// <summary>
        /// CodedUiDeleteGenre - Use 'CodedUiDeleteGenreParams' to pass parameters into this method.
        /// </summary>
        public void CodedUiDeleteGenre()
        {
            #region Variable Declarations
            HtmlHyperlink uIGamesDatabaseHyperlink = this.UIMSNPolskaOutlookSkypWindow.UIHomePageGamesStudiosDocument.UIGamesDatabaseHyperlink;
            HtmlHyperlink uIGenresDatabaseHyperlink = this.UIMSNPolskaOutlookSkypWindow.UIIndexGamesStudiosDocument1.UIGenresDatabaseHyperlink;
            HtmlDiv uIIndexCreateNewGenreNPane = this.UIMSNPolskaOutlookSkypWindow.UIIndexGamesStudiosDocument.UIIndexCreateNewGenreNPane;
            HtmlHyperlink uICreateNewHyperlink = this.UIMSNPolskaOutlookSkypWindow.UIIndexGamesStudiosDocument.UICreateNewHyperlink;
            HtmlEdit uIGenreNameEdit = this.UIMSNPolskaOutlookSkypWindow.UICreateGamesStudiosDocument.UIGenreNameEdit;
            HtmlInputButton uICreateButton = this.UIMSNPolskaOutlookSkypWindow.UICreateGamesStudiosDocument.UICreateButton;
            HtmlHyperlink uIDeleteHyperlink = this.UIMSNPolskaOutlookSkypWindow.UIIndexGamesStudiosDocument.UIDeleteHyperlink;
            HtmlInputButton uIDeleteButton = this.UIMSNPolskaOutlookSkypWindow.UIDeleteGamesStudiosDocument1.UIDeleteButton;
            #endregion

            // Go to web page 'http://localhost:59145/' using new browser instance
            this.UIMSNPolskaOutlookSkypWindow.LaunchUrl(new System.Uri(this.CodedUiDeleteGenreParams.UIMSNPolskaOutlookSkypWindowUrl));

            // Click 'Game's Database' link
            Mouse.Click(uIGamesDatabaseHyperlink, new Point(66, 18));

            // Click 'Genre's Database' link
            Mouse.Click(uIGenresDatabaseHyperlink, new Point(56, 19));

            // Click 'Index Create New Genre Name' pane
            Mouse.Click(uIIndexCreateNewGenreNPane, new Point(34, 76));

            // Click 'Create New' link
            Mouse.Click(uICreateNewHyperlink, new Point(21, 6));

            // Type 'GenreToDelete' in 'Genre Name' text box
            uIGenreNameEdit.Text = this.CodedUiDeleteGenreParams.UIGenreNameEditText;

            // Click 'Create' button
            Mouse.Click(uICreateButton, new Point(49, 24));

            // Click 'Delete' link
            Mouse.Click(uIDeleteHyperlink, new Point(14, 9));

            // Click 'Delete' button
            Mouse.Click(uIDeleteButton, new Point(15, 12));
        }
        
        /// <summary>
        /// AssertMethod1 - Use 'AssertMethod1ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod1()
        {
            #region Variable Declarations
            HtmlHyperlink uICreateNewHyperlink = this.UIMSNPolskaOutlookSkypWindow.UIIndexGamesStudiosDocument1.UICreateNewHyperlink;
            #endregion

            // Verify that the 'InnerText' property of 'Create New' link equals 'Create New'
            Assert.AreEqual(this.AssertMethod1ExpectedValues.UICreateNewHyperlinkInnerText, uICreateNewHyperlink.InnerText);
        }
        
        #region Properties
        public virtual OpenInternetExplorerParams OpenInternetExplorerParams
        {
            get
            {
                if ((this.mOpenInternetExplorerParams == null))
                {
                    this.mOpenInternetExplorerParams = new OpenInternetExplorerParams();
                }
                return this.mOpenInternetExplorerParams;
            }
        }
        
        public virtual OpenAppParams OpenAppParams
        {
            get
            {
                if ((this.mOpenAppParams == null))
                {
                    this.mOpenAppParams = new OpenAppParams();
                }
                return this.mOpenAppParams;
            }
        }
        
        public virtual EditMiastoPersonParams EditMiastoPersonParams
        {
            get
            {
                if ((this.mEditMiastoPersonParams == null))
                {
                    this.mEditMiastoPersonParams = new EditMiastoPersonParams();
                }
                return this.mEditMiastoPersonParams;
            }
        }
        
        public virtual OpenFirefoxParams OpenFirefoxParams
        {
            get
            {
                if ((this.mOpenFirefoxParams == null))
                {
                    this.mOpenFirefoxParams = new OpenFirefoxParams();
                }
                return this.mOpenFirefoxParams;
            }
        }
        
        public virtual OpenFirefoxandGotoPageParams OpenFirefoxandGotoPageParams
        {
            get
            {
                if ((this.mOpenFirefoxandGotoPageParams == null))
                {
                    this.mOpenFirefoxandGotoPageParams = new OpenFirefoxandGotoPageParams();
                }
                return this.mOpenFirefoxandGotoPageParams;
            }
        }
        
        public virtual GoToGamesAndCreateNewParams GoToGamesAndCreateNewParams
        {
            get
            {
                if ((this.mGoToGamesAndCreateNewParams == null))
                {
                    this.mGoToGamesAndCreateNewParams = new GoToGamesAndCreateNewParams();
                }
                return this.mGoToGamesAndCreateNewParams;
            }
        }
        
        public virtual OpenFirefoxandGotoMainPageParams OpenFirefoxandGotoMainPageParams
        {
            get
            {
                if ((this.mOpenFirefoxandGotoMainPageParams == null))
                {
                    this.mOpenFirefoxandGotoMainPageParams = new OpenFirefoxandGotoMainPageParams();
                }
                return this.mOpenFirefoxandGotoMainPageParams;
            }
        }
        
        public virtual AddNewGameParams AddNewGameParams
        {
            get
            {
                if ((this.mAddNewGameParams == null))
                {
                    this.mAddNewGameParams = new AddNewGameParams();
                }
                return this.mAddNewGameParams;
            }
        }
        
        public virtual kalk2Params kalk2Params
        {
            get
            {
                if ((this.mkalk2Params == null))
                {
                    this.mkalk2Params = new kalk2Params();
                }
                return this.mkalk2Params;
            }
        }
        
        public virtual XDParams XDParams
        {
            get
            {
                if ((this.mXDParams == null))
                {
                    this.mXDParams = new XDParams();
                }
                return this.mXDParams;
            }
        }
        
        public virtual TEST1Params TEST1Params
        {
            get
            {
                if ((this.mTEST1Params == null))
                {
                    this.mTEST1Params = new TEST1Params();
                }
                return this.mTEST1Params;
            }
        }
        
        public virtual infugeduParams infugeduParams
        {
            get
            {
                if ((this.minfugeduParams == null))
                {
                    this.minfugeduParams = new infugeduParams();
                }
                return this.minfugeduParams;
            }
        }
        
        public virtual EdgetestParams EdgetestParams
        {
            get
            {
                if ((this.mEdgetestParams == null))
                {
                    this.mEdgetestParams = new EdgetestParams();
                }
                return this.mEdgetestParams;
            }
        }
        
        public virtual ExplorerTestParams ExplorerTestParams
        {
            get
            {
                if ((this.mExplorerTestParams == null))
                {
                    this.mExplorerTestParams = new ExplorerTestParams();
                }
                return this.mExplorerTestParams;
            }
        }
        
        public virtual ASDXDParams ASDXDParams
        {
            get
            {
                if ((this.mASDXDParams == null))
                {
                    this.mASDXDParams = new ASDXDParams();
                }
                return this.mASDXDParams;
            }
        }
        
        public virtual AddNewGenreParams AddNewGenreParams
        {
            get
            {
                if ((this.mAddNewGenreParams == null))
                {
                    this.mAddNewGenreParams = new AddNewGenreParams();
                }
                return this.mAddNewGenreParams;
            }
        }
        
        public virtual CodedUIAddNewGameParams CodedUIAddNewGameParams
        {
            get
            {
                if ((this.mCodedUIAddNewGameParams == null))
                {
                    this.mCodedUIAddNewGameParams = new CodedUIAddNewGameParams();
                }
                return this.mCodedUIAddNewGameParams;
            }
        }
        
        public virtual CodedUiDeleteGameParams CodedUiDeleteGameParams
        {
            get
            {
                if ((this.mCodedUiDeleteGameParams == null))
                {
                    this.mCodedUiDeleteGameParams = new CodedUiDeleteGameParams();
                }
                return this.mCodedUiDeleteGameParams;
            }
        }
        
        public virtual CodedUiUpdeteGameParams CodedUiUpdeteGameParams
        {
            get
            {
                if ((this.mCodedUiUpdeteGameParams == null))
                {
                    this.mCodedUiUpdeteGameParams = new CodedUiUpdeteGameParams();
                }
                return this.mCodedUiUpdeteGameParams;
            }
        }
        
        public virtual CodedUiDeleteGenreParams CodedUiDeleteGenreParams
        {
            get
            {
                if ((this.mCodedUiDeleteGenreParams == null))
                {
                    this.mCodedUiDeleteGenreParams = new CodedUiDeleteGenreParams();
                }
                return this.mCodedUiDeleteGenreParams;
            }
        }
        
        public virtual AssertMethod1ExpectedValues AssertMethod1ExpectedValues
        {
            get
            {
                if ((this.mAssertMethod1ExpectedValues == null))
                {
                    this.mAssertMethod1ExpectedValues = new AssertMethod1ExpectedValues();
                }
                return this.mAssertMethod1ExpectedValues;
            }
        }
        
        public UIMSNPolskaOutlookSkypWindow UIMSNPolskaOutlookSkypWindow
        {
            get
            {
                if ((this.mUIMSNPolskaOutlookSkypWindow == null))
                {
                    this.mUIMSNPolskaOutlookSkypWindow = new UIMSNPolskaOutlookSkypWindow();
                }
                return this.mUIMSNPolskaOutlookSkypWindow;
            }
        }
        
        public UIAllMyASPNETApplicatiWindow UIAllMyASPNETApplicatiWindow
        {
            get
            {
                if ((this.mUIAllMyASPNETApplicatiWindow == null))
                {
                    this.mUIAllMyASPNETApplicatiWindow = new UIAllMyASPNETApplicatiWindow();
                }
                return this.mUIAllMyASPNETApplicatiWindow;
            }
        }
        
        public UIMyASPNETApplicationIWindow UIMyASPNETApplicationIWindow
        {
            get
            {
                if ((this.mUIMyASPNETApplicationIWindow == null))
                {
                    this.mUIMyASPNETApplicationIWindow = new UIMyASPNETApplicationIWindow();
                }
                return this.mUIMyASPNETApplicationIWindow;
            }
        }
        
        public UIUseUIAutomationToTesWindow UIUseUIAutomationToTesWindow
        {
            get
            {
                if ((this.mUIUseUIAutomationToTesWindow == null))
                {
                    this.mUIUseUIAutomationToTesWindow = new UIUseUIAutomationToTesWindow();
                }
                return this.mUIUseUIAutomationToTesWindow;
            }
        }
        
        public UINowakartaMozillaFireWindow UINowakartaMozillaFireWindow
        {
            get
            {
                if ((this.mUINowakartaMozillaFireWindow == null))
                {
                    this.mUINowakartaMozillaFireWindow = new UINowakartaMozillaFireWindow();
                }
                return this.mUINowakartaMozillaFireWindow;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow();
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow1 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow1();
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UISearchWindowsWindow UISearchWindowsWindow
        {
            get
            {
                if ((this.mUISearchWindowsWindow == null))
                {
                    this.mUISearchWindowsWindow = new UISearchWindowsWindow();
                }
                return this.mUISearchWindowsWindow;
            }
        }
        
        public UIAktualizacjaaplikacjWindow UIAktualizacjaaplikacjWindow
        {
            get
            {
                if ((this.mUIAktualizacjaaplikacjWindow == null))
                {
                    this.mUIAktualizacjaaplikacjWindow = new UIAktualizacjaaplikacjWindow();
                }
                return this.mUIAktualizacjaaplikacjWindow;
            }
        }
        
        public UIProgramManagerWindow UIProgramManagerWindow
        {
            get
            {
                if ((this.mUIProgramManagerWindow == null))
                {
                    this.mUIProgramManagerWindow = new UIProgramManagerWindow();
                }
                return this.mUIProgramManagerWindow;
            }
        }
        
        public UIStronastartowaprograWindow UIStronastartowaprograWindow
        {
            get
            {
                if ((this.mUIStronastartowaprograWindow == null))
                {
                    this.mUIStronastartowaprograWindow = new UIStronastartowaprograWindow();
                }
                return this.mUIStronastartowaprograWindow;
            }
        }
        #endregion
        
        #region Fields
        private OpenInternetExplorerParams mOpenInternetExplorerParams;
        
        private OpenAppParams mOpenAppParams;
        
        private EditMiastoPersonParams mEditMiastoPersonParams;
        
        private OpenFirefoxParams mOpenFirefoxParams;
        
        private OpenFirefoxandGotoPageParams mOpenFirefoxandGotoPageParams;
        
        private GoToGamesAndCreateNewParams mGoToGamesAndCreateNewParams;
        
        private OpenFirefoxandGotoMainPageParams mOpenFirefoxandGotoMainPageParams;
        
        private AddNewGameParams mAddNewGameParams;
        
        private kalk2Params mkalk2Params;
        
        private XDParams mXDParams;
        
        private TEST1Params mTEST1Params;
        
        private infugeduParams minfugeduParams;
        
        private EdgetestParams mEdgetestParams;
        
        private ExplorerTestParams mExplorerTestParams;
        
        private ASDXDParams mASDXDParams;
        
        private AddNewGenreParams mAddNewGenreParams;
        
        private CodedUIAddNewGameParams mCodedUIAddNewGameParams;
        
        private CodedUiDeleteGameParams mCodedUiDeleteGameParams;
        
        private CodedUiUpdeteGameParams mCodedUiUpdeteGameParams;
        
        private CodedUiDeleteGenreParams mCodedUiDeleteGenreParams;
        
        private AssertMethod1ExpectedValues mAssertMethod1ExpectedValues;
        
        private UIMSNPolskaOutlookSkypWindow mUIMSNPolskaOutlookSkypWindow;
        
        private UIAllMyASPNETApplicatiWindow mUIAllMyASPNETApplicatiWindow;
        
        private UIMyASPNETApplicationIWindow mUIMyASPNETApplicationIWindow;
        
        private UIUseUIAutomationToTesWindow mUIUseUIAutomationToTesWindow;
        
        private UINowakartaMozillaFireWindow mUINowakartaMozillaFireWindow;
        
        private UIItemWindow mUIItemWindow;
        
        private UIItemWindow1 mUIItemWindow1;
        
        private UISearchWindowsWindow mUISearchWindowsWindow;
        
        private UIAktualizacjaaplikacjWindow mUIAktualizacjaaplikacjWindow;
        
        private UIProgramManagerWindow mUIProgramManagerWindow;
        
        private UIStronastartowaprograWindow mUIStronastartowaprograWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'OpenInternetExplorer'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class OpenInternetExplorerParams
    {
        
        #region Fields
        /// <summary>
        /// Go to web page 'http://go.microsoft.com/fwlink/p/?LinkId=255141' using new browser instance
        /// </summary>
        public string Url = "http://go.microsoft.com/fwlink/p/?LinkId=255141";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'OpenApp'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class OpenAppParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'http://localhost:59145/' in combo box
        /// </summary>
        public string UIItemComboBoxEditableItem = "http://localhost:59145/";
        
        /// <summary>
        /// Type '{Enter}' in 'Wprowadź adres lub szukaj' text box
        /// </summary>
        public string UIWprowadźadreslubszukEditSendKeys = "{Enter}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EditMiastoPerson'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class EditMiastoPersonParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Gdansk' in 'Miasto' text box
        /// </summary>
        public string UIMiastoEditText = "Gdansk";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'OpenFirefox'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class OpenFirefoxParams
    {
        
        #region Fields
        /// <summary>
        /// Launch '%ProgramFiles(x86)%\Mozilla Firefox\firefox.exe'
        /// </summary>
        public string UIUseUIAutomationToTesWindowExePath = "C:\\Program Files (x86)\\Mozilla Firefox\\firefox.exe";
        
        /// <summary>
        /// Launch '%ProgramFiles(x86)%\Mozilla Firefox\firefox.exe'
        /// </summary>
        public string UIUseUIAutomationToTesWindowAlternateExePath = "%ProgramFiles(x86)%\\Mozilla Firefox\\firefox.exe";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'OpenFirefoxandGotoPage'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class OpenFirefoxandGotoPageParams
    {
        
        #region Fields
        /// <summary>
        /// Launch '%ProgramFiles(x86)%\Mozilla Firefox\firefox.exe'
        /// </summary>
        public string ExePath = "C:\\Program Files (x86)\\Mozilla Firefox\\firefox.exe";
        
        /// <summary>
        /// Launch '%ProgramFiles(x86)%\Mozilla Firefox\firefox.exe'
        /// </summary>
        public string AlternateExePath = "%ProgramFiles(x86)%\\Mozilla Firefox\\firefox.exe";
        
        /// <summary>
        /// Type 'Control + v' in 'Wprowadź adres lub szukaj' text box
        /// </summary>
        public string UIWprowadźadreslubszukEditSendKeys = "v";
        
        /// <summary>
        /// Type '{Enter}' in 'Wprowadź adres lub szukaj' text box
        /// </summary>
        public string UIWprowadźadreslubszukEditSendKeys1 = "{Enter}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'GoToGamesAndCreateNew'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class GoToGamesAndCreateNewParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'CodedUITest' in 'Title' text box
        /// </summary>
        public string UITitleEditText = "CodedUITest";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'OpenFirefoxandGotoMainPage'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class OpenFirefoxandGotoMainPageParams
    {
        
        #region Fields
        /// <summary>
        /// Launch '%ProgramFiles(x86)%\Mozilla Firefox\firefox.exe'
        /// </summary>
        public string ExePath = "C:\\Program Files (x86)\\Mozilla Firefox\\firefox.exe";
        
        /// <summary>
        /// Launch '%ProgramFiles(x86)%\Mozilla Firefox\firefox.exe'
        /// </summary>
        public string AlternateExePath = "%ProgramFiles(x86)%\\Mozilla Firefox\\firefox.exe";
        
        /// <summary>
        /// Select 'localhost:59145' in combo box
        /// </summary>
        public string UIItemComboBoxEditableItem = "localhost:59145";
        
        /// <summary>
        /// Select '' in list box
        /// </summary>
        public string UIItemListSelectedItemsAsString = "";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AddNewGame'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class AddNewGameParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Coded' in 'Title' text box
        /// </summary>
        public string UITitleEditText = "Coded";
        
        /// <summary>
        /// Type '{Down}' in 'Title' text box
        /// </summary>
        public string UITitleEditSendKeys = "{Down}";
        
        /// <summary>
        /// Type '{Enter}' in 'CodedUITest CodedUITest' list item
        /// </summary>
        public string UICodedUITestCodedUITeListItemSendKeys = "{Enter}";
        
        /// <summary>
        /// Type 'CodedUITest1' in 'Title' text box
        /// </summary>
        public string UITitleEditText1 = "CodedUITest1";
        
        /// <summary>
        /// Type '{Tab}' in 'Title' text box
        /// </summary>
        public string UITitleEditSendKeys1 = "{Tab}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'kalk2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class kalk2Params
    {
        
        #region Fields
        /// <summary>
        /// Launch '%ProgramW6432%\WindowsApps\Microsoft.WindowsCalculator_10.1703.601.0_x64__8wekyb3d8bbwe\Calculator.exe' with arguments '-ServerName:App.AppXsm3pg4n7er43kdh1qp4e79f1j7am68r8.mca'
        /// </summary>
        public string ExePath = "C:\\Program Files\\WindowsApps\\Microsoft.WindowsCalculator_10.1703.601.0_x64__8weky" +
            "b3d8bbwe\\Calculator.exe";
        
        /// <summary>
        /// Launch '%ProgramW6432%\WindowsApps\Microsoft.WindowsCalculator_10.1703.601.0_x64__8wekyb3d8bbwe\Calculator.exe' with arguments '-ServerName:App.AppXsm3pg4n7er43kdh1qp4e79f1j7am68r8.mca'
        /// </summary>
        public string AlternateExePath = "%ProgramW6432%\\WindowsApps\\Microsoft.WindowsCalculator_10.1703.601.0_x64__8wekyb3" +
            "d8bbwe\\Calculator.exe";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'XD'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class XDParams
    {
        
        #region Fields
        /// <summary>
        /// Launch '%ProgramFiles(x86)%\Mozilla Firefox\firefox.exe'
        /// </summary>
        public string ExePath = "C:\\Program Files (x86)\\Mozilla Firefox\\firefox.exe";
        
        /// <summary>
        /// Launch '%ProgramFiles(x86)%\Mozilla Firefox\firefox.exe'
        /// </summary>
        public string AlternateExePath = "%ProgramFiles(x86)%\\Mozilla Firefox\\firefox.exe";
        
        /// <summary>
        /// Select 'U' in combo box
        /// </summary>
        public string UIItemComboBoxEditableItem = "U";
        
        /// <summary>
        /// Type '{Back}' in 'U Google Wyszukiwanie' list item
        /// </summary>
        public string UIUGoogleWyszukiwanieListItemSendKeys = "{Back}";
        
        /// <summary>
        /// Select 'CODEDUI' in combo box
        /// </summary>
        public string UIItemComboBoxEditableItem1 = "CODEDUI";
        
        /// <summary>
        /// Type '{Enter}' in 'Wprowadź adres lub szukaj' text box
        /// </summary>
        public string UIWprowadźadreslubszukEditSendKeys = "{Enter}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'TEST1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class TEST1Params
    {
        
        #region Fields
        /// <summary>
        /// Type 'xd' in 'Name' text box
        /// </summary>
        public string UINameEditText = "xd";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'infugedu'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class infugeduParams
    {
        
        #region Fields
        /// <summary>
        /// Launch '%ProgramFiles(x86)%\Mozilla Firefox\firefox.exe'
        /// </summary>
        public string ExePath = "C:\\Program Files (x86)\\Mozilla Firefox\\firefox.exe";
        
        /// <summary>
        /// Launch '%ProgramFiles(x86)%\Mozilla Firefox\firefox.exe'
        /// </summary>
        public string AlternateExePath = "%ProgramFiles(x86)%\\Mozilla Firefox\\firefox.exe";
        
        /// <summary>
        /// Select 'https://inf.ug.edu.pl/aktualnosci' in combo box
        /// </summary>
        public string UIItemComboBoxEditableItem = "https://inf.ug.edu.pl/aktualnosci";
        
        /// <summary>
        /// Select '' in list box
        /// </summary>
        public string UIItemListSelectedItemsAsString = "";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'Edgetest'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class EdgetestParams
    {
        
        #region Fields
        /// <summary>
        /// Launch '%windir%\SystemApps\Microsoft.MicrosoftEdge_8wekyb3d8bbwe\MicrosoftEdge.exe' with arguments '-ServerName:MicrosoftEdge.AppXdnhjhccw3zf0j06tkg3jtqr00qdm0khc.mca'
        /// </summary>
        public string ExePath = "C:\\Windows\\SystemApps\\Microsoft.MicrosoftEdge_8wekyb3d8bbwe\\MicrosoftEdge.exe";
        
        /// <summary>
        /// Launch '%windir%\SystemApps\Microsoft.MicrosoftEdge_8wekyb3d8bbwe\MicrosoftEdge.exe' with arguments '-ServerName:MicrosoftEdge.AppXdnhjhccw3zf0j06tkg3jtqr00qdm0khc.mca'
        /// </summary>
        public string AlternateExePath = "%windir%\\SystemApps\\Microsoft.MicrosoftEdge_8wekyb3d8bbwe\\MicrosoftEdge.exe";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ExplorerTest'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class ExplorerTestParams
    {
        
        #region Fields
        /// <summary>
        /// Go to web page 'http://go.microsoft.com/fwlink/p/?LinkId=255141' using new browser instance
        /// </summary>
        public string UIMSNPolskaOutlookSkypWindowUrl = "http://go.microsoft.com/fwlink/p/?LinkId=255141";
        
        /// <summary>
        /// Type 'xd' in 'firstname' text box
        /// </summary>
        public string UIFirstnameEditText = "xd";
        
        /// <summary>
        /// Type 'xd' in 'lastname' text box
        /// </summary>
        public string UILastnameEditText = "xd";
        
        /// <summary>
        /// Type 'xd' in 'reg_email__' text box
        /// </summary>
        public string UIReg_email__EditText = "xd";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ASDXD'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class ASDXDParams
    {
        
        #region Fields
        /// <summary>
        /// Go to web page 'http://go.microsoft.com/fwlink/p/?LinkId=255141' using new browser instance
        /// </summary>
        public string UIMSNPolskaOutlookSkypWindowUrl = "http://go.microsoft.com/fwlink/p/?LinkId=255141";
        
        /// <summary>
        /// Type 'XD' in 'q' text box
        /// </summary>
        public string UIQEditText = "XD";
        
        /// <summary>
        /// Type '{Enter}' in 'q' text box
        /// </summary>
        public string UIQEditSendKeys = "{Enter}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AddNewGenre'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class AddNewGenreParams
    {
        
        #region Fields
        /// <summary>
        /// Go to web page 'http://localhost:59145/' using new browser instance
        /// </summary>
        public string UIMSNPolskaOutlookSkypWindowUrl = "http://localhost:59145/";
        
        /// <summary>
        /// Type 'codeduitest1' in 'Genre Name' text box
        /// </summary>
        public string UIGenreNameEditText = "codeduitest1";
        
        /// <summary>
        /// Type 'codeduitest' in 'Genre Name' text box
        /// </summary>
        public string UIGenreNameEditText1 = "codeduitest";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CodedUIAddNewGame'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CodedUIAddNewGameParams
    {
        
        #region Fields
        /// <summary>
        /// Go to web page 'http://go.microsoft.com/fwlink/p/?LinkId=255141' using new browser instance
        /// </summary>
        public string UIMSNPolskaOutlookSkypWindowUrl = "http://go.microsoft.com/fwlink/p/?LinkId=255141";
        
        /// <summary>
        /// Go to web page 'http://localhost:59145/'
        /// </summary>
        public string UIMSNPolskaOutlookSkypWindowUrl1 = "http://localhost:59145/";
        
        /// <summary>
        /// Type 'codedUItest2' in 'Title' text box
        /// </summary>
        public string UITitleEditText = "codedUItest2";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CodedUiDeleteGame'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CodedUiDeleteGameParams
    {
        
        #region Fields
        /// <summary>
        /// Go to web page 'http://localhost:59145/' using new browser instance
        /// </summary>
        public string UIMSNPolskaOutlookSkypWindowUrl = "http://localhost:59145/";
        
        /// <summary>
        /// Type 'GameToDelete' in 'Title' text box
        /// </summary>
        public string UITitleEditText = "GameToDelete";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CodedUiUpdeteGame'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CodedUiUpdeteGameParams
    {
        
        #region Fields
        /// <summary>
        /// Go to web page 'http://localhost:59145/' using new browser instance
        /// </summary>
        public string UIMSNPolskaOutlookSkypWindowUrl = "http://localhost:59145/";
        
        /// <summary>
        /// Type 'GameToUpdate' in 'Title' text box
        /// </summary>
        public string UITitleEditText = "GameToUpdate";
        
        /// <summary>
        /// Select 'codeduitest' in 'Genre' combo box
        /// </summary>
        public string UIGenreComboBoxSelectedItem = "codeduitest";
        
        /// <summary>
        /// Type 'GameAfterUpdate' in 'Title' text box
        /// </summary>
        public string UITitleEditText1 = "GameAfterUpdate";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CodedUiDeleteGenre'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CodedUiDeleteGenreParams
    {
        
        #region Fields
        /// <summary>
        /// Go to web page 'http://localhost:59145/' using new browser instance
        /// </summary>
        public string UIMSNPolskaOutlookSkypWindowUrl = "http://localhost:59145/";
        
        /// <summary>
        /// Type 'GenreToDelete' in 'Genre Name' text box
        /// </summary>
        public string UIGenreNameEditText = "GenreToDelete";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class AssertMethod1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Create New' link equals 'Create New'
        /// </summary>
        public string UICreateNewHyperlinkInnerText = "Create New";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIMSNPolskaOutlookSkypWindow : BrowserWindow
    {
        
        public UIMSNPolskaOutlookSkypWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "MSN Polska - Outlook, Skype, Hotmail, Messenger, Microsoft Office Online i OneDri" +
                "ve";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("MSN Polska - Outlook, Skype, Hotmail, Messenger, Microsoft Office Online i OneDri" +
                    "ve");
            this.WindowTitles.Add("ErrorPage");
            this.WindowTitles.Add("inf ug edu - Bing");
            this.WindowTitles.Add("Wydarzenia∴Instytut Informatyki UG");
            this.WindowTitles.Add("Poczta inf.ug.edu.pl - Logowanie");
            this.WindowTitles.Add("Witamy na Facebooku. Zaloguj się, zarejestruj się lub dowiedz się więcej");
            this.WindowTitles.Add("XD - Bing");
            this.WindowTitles.Add("Home Page - GamesStudios");
            this.WindowTitles.Add("Index - GamesStudios");
            this.WindowTitles.Add("Create - GamesStudios");
            this.WindowTitles.Add("Delete - GamesStudios");
            this.WindowTitles.Add("http://localhost:59145/");
            this.WindowTitles.Add("Edit - GamesStudios");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIKontrolkakombiadresuToolBar UIKontrolkakombiadresuToolBar
        {
            get
            {
                if ((this.mUIKontrolkakombiadresuToolBar == null))
                {
                    this.mUIKontrolkakombiadresuToolBar = new UIKontrolkakombiadresuToolBar(this);
                }
                return this.mUIKontrolkakombiadresuToolBar;
            }
        }
        
        public UIErrorPageDocument UIErrorPageDocument
        {
            get
            {
                if ((this.mUIErrorPageDocument == null))
                {
                    this.mUIErrorPageDocument = new UIErrorPageDocument(this);
                }
                return this.mUIErrorPageDocument;
            }
        }
        
        public UIMSNPolskaOutlookSkypDocument UIMSNPolskaOutlookSkypDocument
        {
            get
            {
                if ((this.mUIMSNPolskaOutlookSkypDocument == null))
                {
                    this.mUIMSNPolskaOutlookSkypDocument = new UIMSNPolskaOutlookSkypDocument(this);
                }
                return this.mUIMSNPolskaOutlookSkypDocument;
            }
        }
        
        public UIInfugeduBingDocument UIInfugeduBingDocument
        {
            get
            {
                if ((this.mUIInfugeduBingDocument == null))
                {
                    this.mUIInfugeduBingDocument = new UIInfugeduBingDocument(this);
                }
                return this.mUIInfugeduBingDocument;
            }
        }
        
        public UIWydarzeniaInstytutInDocument UIWydarzeniaInstytutInDocument
        {
            get
            {
                if ((this.mUIWydarzeniaInstytutInDocument == null))
                {
                    this.mUIWydarzeniaInstytutInDocument = new UIWydarzeniaInstytutInDocument(this);
                }
                return this.mUIWydarzeniaInstytutInDocument;
            }
        }
        
        public UIPocztainfugeduplLogoDocument UIPocztainfugeduplLogoDocument
        {
            get
            {
                if ((this.mUIPocztainfugeduplLogoDocument == null))
                {
                    this.mUIPocztainfugeduplLogoDocument = new UIPocztainfugeduplLogoDocument(this);
                }
                return this.mUIPocztainfugeduplLogoDocument;
            }
        }
        
        public UIWitamynaFacebookuZalDocument UIWitamynaFacebookuZalDocument
        {
            get
            {
                if ((this.mUIWitamynaFacebookuZalDocument == null))
                {
                    this.mUIWitamynaFacebookuZalDocument = new UIWitamynaFacebookuZalDocument(this);
                }
                return this.mUIWitamynaFacebookuZalDocument;
            }
        }
        
        public UIXDBingDocument UIXDBingDocument
        {
            get
            {
                if ((this.mUIXDBingDocument == null))
                {
                    this.mUIXDBingDocument = new UIXDBingDocument(this);
                }
                return this.mUIXDBingDocument;
            }
        }
        
        public UIHomePageGamesStudiosDocument UIHomePageGamesStudiosDocument
        {
            get
            {
                if ((this.mUIHomePageGamesStudiosDocument == null))
                {
                    this.mUIHomePageGamesStudiosDocument = new UIHomePageGamesStudiosDocument(this);
                }
                return this.mUIHomePageGamesStudiosDocument;
            }
        }
        
        public UIIndexGamesStudiosDocument UIIndexGamesStudiosDocument
        {
            get
            {
                if ((this.mUIIndexGamesStudiosDocument == null))
                {
                    this.mUIIndexGamesStudiosDocument = new UIIndexGamesStudiosDocument(this);
                }
                return this.mUIIndexGamesStudiosDocument;
            }
        }
        
        public UICreateGamesStudiosDocument UICreateGamesStudiosDocument
        {
            get
            {
                if ((this.mUICreateGamesStudiosDocument == null))
                {
                    this.mUICreateGamesStudiosDocument = new UICreateGamesStudiosDocument(this);
                }
                return this.mUICreateGamesStudiosDocument;
            }
        }
        
        public UIIndexGamesStudiosDocument1 UIIndexGamesStudiosDocument1
        {
            get
            {
                if ((this.mUIIndexGamesStudiosDocument1 == null))
                {
                    this.mUIIndexGamesStudiosDocument1 = new UIIndexGamesStudiosDocument1(this);
                }
                return this.mUIIndexGamesStudiosDocument1;
            }
        }
        
        public UICreateGamesStudiosDocument1 UICreateGamesStudiosDocument1
        {
            get
            {
                if ((this.mUICreateGamesStudiosDocument1 == null))
                {
                    this.mUICreateGamesStudiosDocument1 = new UICreateGamesStudiosDocument1(this);
                }
                return this.mUICreateGamesStudiosDocument1;
            }
        }
        
        public UIDeleteGamesStudiosDocument UIDeleteGamesStudiosDocument
        {
            get
            {
                if ((this.mUIDeleteGamesStudiosDocument == null))
                {
                    this.mUIDeleteGamesStudiosDocument = new UIDeleteGamesStudiosDocument(this);
                }
                return this.mUIDeleteGamesStudiosDocument;
            }
        }
        
        public UIEditGamesStudiosDocument UIEditGamesStudiosDocument
        {
            get
            {
                if ((this.mUIEditGamesStudiosDocument == null))
                {
                    this.mUIEditGamesStudiosDocument = new UIEditGamesStudiosDocument(this);
                }
                return this.mUIEditGamesStudiosDocument;
            }
        }
        
        public UIDeleteGamesStudiosDocument1 UIDeleteGamesStudiosDocument1
        {
            get
            {
                if ((this.mUIDeleteGamesStudiosDocument1 == null))
                {
                    this.mUIDeleteGamesStudiosDocument1 = new UIDeleteGamesStudiosDocument1(this);
                }
                return this.mUIDeleteGamesStudiosDocument1;
            }
        }
        #endregion
        
        #region Fields
        private UIKontrolkakombiadresuToolBar mUIKontrolkakombiadresuToolBar;
        
        private UIErrorPageDocument mUIErrorPageDocument;
        
        private UIMSNPolskaOutlookSkypDocument mUIMSNPolskaOutlookSkypDocument;
        
        private UIInfugeduBingDocument mUIInfugeduBingDocument;
        
        private UIWydarzeniaInstytutInDocument mUIWydarzeniaInstytutInDocument;
        
        private UIPocztainfugeduplLogoDocument mUIPocztainfugeduplLogoDocument;
        
        private UIWitamynaFacebookuZalDocument mUIWitamynaFacebookuZalDocument;
        
        private UIXDBingDocument mUIXDBingDocument;
        
        private UIHomePageGamesStudiosDocument mUIHomePageGamesStudiosDocument;
        
        private UIIndexGamesStudiosDocument mUIIndexGamesStudiosDocument;
        
        private UICreateGamesStudiosDocument mUICreateGamesStudiosDocument;
        
        private UIIndexGamesStudiosDocument1 mUIIndexGamesStudiosDocument1;
        
        private UICreateGamesStudiosDocument1 mUICreateGamesStudiosDocument1;
        
        private UIDeleteGamesStudiosDocument mUIDeleteGamesStudiosDocument;
        
        private UIEditGamesStudiosDocument mUIEditGamesStudiosDocument;
        
        private UIDeleteGamesStudiosDocument1 mUIDeleteGamesStudiosDocument1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIKontrolkakombiadresuToolBar : WinToolBar
    {
        
        public UIKontrolkakombiadresuToolBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinToolBar.PropertyNames.Name] = "Kontrolka kombi adresu";
            this.WindowTitles.Add("MSN Polska - Outlook, Skype, Hotmail, Messenger, Microsoft Office Online i OneDri" +
                    "ve");
            #endregion
        }
        
        #region Properties
        public WinMenuItem UIAdresMenuItem
        {
            get
            {
                if ((this.mUIAdresMenuItem == null))
                {
                    this.mUIAdresMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUIAdresMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Adres";
                    this.mUIAdresMenuItem.WindowTitles.Add("MSN Polska - Outlook, Skype, Hotmail, Messenger, Microsoft Office Online i OneDri" +
                            "ve");
                    #endregion
                }
                return this.mUIAdresMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WinMenuItem mUIAdresMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIErrorPageDocument : HtmlDocument
    {
        
        public UIErrorPageDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "ErrorPage";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:9098/";
            this.WindowTitles.Add("ErrorPage");
            #endregion
        }
        
        #region Properties
        public HtmlButton UIListaosóbButton
        {
            get
            {
                if ((this.mUIListaosóbButton == null))
                {
                    this.mUIListaosóbButton = new HtmlButton(this);
                    #region Search Criteria
                    this.mUIListaosóbButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUIListaosóbButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUIListaosóbButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Lista osób";
                    this.mUIListaosóbButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUIListaosóbButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIListaosóbButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-default";
                    this.mUIListaosóbButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-default\" onclick=\"locatio";
                    this.mUIListaosóbButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "1";
                    this.mUIListaosóbButton.WindowTitles.Add("ErrorPage");
                    #endregion
                }
                return this.mUIListaosóbButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlButton mUIListaosóbButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIMSNPolskaOutlookSkypDocument : HtmlDocument
    {
        
        public UIMSNPolskaOutlookSkypDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "MSN Polska - Outlook, Skype, Hotmail, Messenger, Microsoft Office Online i OneDri" +
                "ve";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/pl-pl/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://www.msn.com/pl-pl/?ocid=iehp&pc=EUPP_";
            this.WindowTitles.Add("MSN Polska - Outlook, Skype, Hotmail, Messenger, Microsoft Office Online i OneDri" +
                    "ve");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UIQEdit
        {
            get
            {
                if ((this.mUIQEdit == null))
                {
                    this.mUIQEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIQEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "q";
                    this.mUIQEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "q";
                    this.mUIQEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIQEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIQEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIQEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUIQEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"q\" id=\"q\" accesskey=\"S\" aria-label";
                    this.mUIQEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "1";
                    this.mUIQEdit.WindowTitles.Add("MSN Polska - Outlook, Skype, Hotmail, Messenger, Microsoft Office Online i OneDri" +
                            "ve");
                    #endregion
                }
                return this.mUIQEdit;
            }
        }
        
        public HtmlIFrame UIUtif_banner1_homepagFrame
        {
            get
            {
                if ((this.mUIUtif_banner1_homepagFrame == null))
                {
                    this.mUIUtif_banner1_homepagFrame = new HtmlIFrame(this);
                    #region Search Criteria
                    this.mUIUtif_banner1_homepagFrame.SearchProperties[HtmlFrame.PropertyNames.Id] = "utif_banner1_homepage_container_df5f8430-14fe-4c49-a08e-963b1b0ec39c_87a26c39-9de" +
                        "2-4f25-8a98-424df05362dd";
                    this.mUIUtif_banner1_homepagFrame.SearchProperties[HtmlFrame.PropertyNames.Name] = "utif_banner1_homepage_container_df5f8430-14fe-4c49-a08e-963b1b0ec39c_87a26c39-9de" +
                        "2-4f25-8a98-424df05362dd";
                    this.mUIUtif_banner1_homepagFrame.FilterProperties[HtmlFrame.PropertyNames.AbsolutePath] = null;
                    this.mUIUtif_banner1_homepagFrame.FilterProperties[HtmlFrame.PropertyNames.PageUrl] = null;
                    this.mUIUtif_banner1_homepagFrame.FilterProperties[HtmlFrame.PropertyNames.Title] = null;
                    this.mUIUtif_banner1_homepagFrame.FilterProperties[HtmlFrame.PropertyNames.Class] = null;
                    this.mUIUtif_banner1_homepagFrame.FilterProperties[HtmlFrame.PropertyNames.ControlDefinition] = "name=\"utif_banner1_homepage_container_df";
                    this.mUIUtif_banner1_homepagFrame.FilterProperties[HtmlFrame.PropertyNames.TagInstance] = "2";
                    this.mUIUtif_banner1_homepagFrame.WindowTitles.Add("MSN Polska - Outlook, Skype, Hotmail, Messenger, Microsoft Office Online i OneDri" +
                            "ve");
                    #endregion
                }
                return this.mUIUtif_banner1_homepagFrame;
            }
        }
        
        public UIMainCustom UIMainCustom
        {
            get
            {
                if ((this.mUIMainCustom == null))
                {
                    this.mUIMainCustom = new UIMainCustom(this);
                }
                return this.mUIMainCustom;
            }
        }
        
        public HtmlDiv UIBanner1_homepage_02dPane
        {
            get
            {
                if ((this.mUIBanner1_homepage_02dPane == null))
                {
                    this.mUIBanner1_homepage_02dPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIBanner1_homepage_02dPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "banner1_homepage_02d5ea88-a2b5-4ac6-9560-7c3f4dc041b8";
                    this.mUIBanner1_homepage_02dPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIBanner1_homepage_02dPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "require([\"dap\"], function (dap) { dap(\"&";
                    this.mUIBanner1_homepage_02dPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIBanner1_homepage_02dPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "widead non-empty-ad";
                    this.mUIBanner1_homepage_02dPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "tabindex=\"-1\" class=\"widead non-empty-ad\" id=\"banner1_homepage_02d5ea88-a2b5-4ac6" +
                        "-9560-7c3f4dc041b8\" aria-hidden=\"true\" style=\"visibility: visible;\" data-m=\'{\"i\"" +
                        ":66,\"p\":16,\"n\":\"topTakeoverAd.ad\",\"t\":\"ad\",\"o\":2}\' data-id=\"66\" data-aop=\"toptak" +
                        "eoverad.ad_ad\"";
                    this.mUIBanner1_homepage_02dPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "57";
                    this.mUIBanner1_homepage_02dPane.WindowTitles.Add("MSN Polska - Outlook, Skype, Hotmail, Messenger, Microsoft Office Online i OneDri" +
                            "ve");
                    #endregion
                }
                return this.mUIBanner1_homepage_02dPane;
            }
        }
        
        public HtmlCustom UIHeadercommonCustom
        {
            get
            {
                if ((this.mUIHeadercommonCustom == null))
                {
                    this.mUIHeadercommonCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIHeadercommonCustom.SearchProperties["TagName"] = "HEADER";
                    this.mUIHeadercommonCustom.SearchProperties["Id"] = "header-common";
                    this.mUIHeadercommonCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIHeadercommonCustom.FilterProperties["Class"] = "no-overlay";
                    this.mUIHeadercommonCustom.FilterProperties["ControlDefinition"] = "class=\"no-overlay\" id=\"header-common\" ro";
                    this.mUIHeadercommonCustom.FilterProperties["TagInstance"] = "1";
                    this.mUIHeadercommonCustom.WindowTitles.Add("MSN Polska - Outlook, Skype, Hotmail, Messenger, Microsoft Office Online i OneDri" +
                            "ve");
                    #endregion
                }
                return this.mUIHeadercommonCustom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUIQEdit;
        
        private HtmlIFrame mUIUtif_banner1_homepagFrame;
        
        private UIMainCustom mUIMainCustom;
        
        private HtmlDiv mUIBanner1_homepage_02dPane;
        
        private HtmlCustom mUIHeadercommonCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIMainCustom : HtmlCustom
    {
        
        public UIMainCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "main";
            this.SearchProperties["Id"] = "main";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.FilterProperties["Class"] = null;
            this.FilterProperties["ControlDefinition"] = "id=\"main\" role=\"main\" data-m=\'{\"i\":16,\"n";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("MSN Polska - Outlook, Skype, Hotmail, Messenger, Microsoft Office Online i OneDri" +
                    "ve");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIFacebookHyperlink
        {
            get
            {
                if ((this.mUIFacebookHyperlink == null))
                {
                    this.mUIFacebookHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIFacebookHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIFacebookHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIFacebookHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = "_blank";
                    this.mUIFacebookHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Facebook";
                    this.mUIFacebookHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/";
                    this.mUIFacebookHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIFacebookHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://www.facebook.com/";
                    this.mUIFacebookHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIFacebookHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"http://www.facebook.com/\" target=\"";
                    this.mUIFacebookHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "3";
                    this.mUIFacebookHyperlink.WindowTitles.Add("MSN Polska - Outlook, Skype, Hotmail, Messenger, Microsoft Office Online i OneDri" +
                            "ve");
                    #endregion
                }
                return this.mUIFacebookHyperlink;
            }
        }
        
        public HtmlHyperlink UIOfficeHyperlink
        {
            get
            {
                if ((this.mUIOfficeHyperlink == null))
                {
                    this.mUIOfficeHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIOfficeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIOfficeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIOfficeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = "_blank";
                    this.mUIOfficeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Office";
                    this.mUIOfficeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/click";
                    this.mUIOfficeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIOfficeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://clk.tradedoubler.com/click?p=270365&a=2811327&epi=PRIME_PLPL_HP_ME_OFFICE&" +
                        "url=https://www.office.com/?omkt=pl-pl%26WT.mc_id=MSN_site";
                    this.mUIOfficeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIOfficeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"//clk.tradedoubler.com/click?p=270";
                    this.mUIOfficeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "5";
                    this.mUIOfficeHyperlink.WindowTitles.Add("MSN Polska - Outlook, Skype, Hotmail, Messenger, Microsoft Office Online i OneDri" +
                            "ve");
                    #endregion
                }
                return this.mUIOfficeHyperlink;
            }
        }
        
        public HtmlHyperlink UIOutlookcomHyperlink
        {
            get
            {
                if ((this.mUIOutlookcomHyperlink == null))
                {
                    this.mUIOutlookcomHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIOutlookcomHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIOutlookcomHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIOutlookcomHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = "_blank";
                    this.mUIOutlookcomHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Outlook.com";
                    this.mUIOutlookcomHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/";
                    this.mUIOutlookcomHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIOutlookcomHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://outlook.com/";
                    this.mUIOutlookcomHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIOutlookcomHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"http://outlook.com/\" target=\"_blan";
                    this.mUIOutlookcomHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUIOutlookcomHyperlink.WindowTitles.Add("MSN Polska - Outlook, Skype, Hotmail, Messenger, Microsoft Office Online i OneDri" +
                            "ve");
                    #endregion
                }
                return this.mUIOutlookcomHyperlink;
            }
        }
        
        public HtmlHyperlink UISklepHyperlink
        {
            get
            {
                if ((this.mUISklepHyperlink == null))
                {
                    this.mUISklepHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUISklepHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUISklepHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUISklepHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = "_blank";
                    this.mUISklepHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Sklep";
                    this.mUISklepHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/click";
                    this.mUISklepHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUISklepHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://clk.tradedoubler.com/click?p=270365&a=2811327&g=0&epi=Prime_PLPL_HP_MEStor" +
                        "eL1&url=https://www.microsoftstore.com/store/mseea1/pl_PL/home?icid=MSN_storeTIL" +
                        "E";
                    this.mUISklepHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUISklepHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"http://clk.tradedoubler.com/click?";
                    this.mUISklepHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    this.mUISklepHyperlink.WindowTitles.Add("MSN Polska - Outlook, Skype, Hotmail, Messenger, Microsoft Office Online i OneDri" +
                            "ve");
                    #endregion
                }
                return this.mUISklepHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIFacebookHyperlink;
        
        private HtmlHyperlink mUIOfficeHyperlink;
        
        private HtmlHyperlink mUIOutlookcomHyperlink;
        
        private HtmlHyperlink mUISklepHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIInfugeduBingDocument : HtmlDocument
    {
        
        public UIInfugeduBingDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "inf ug edu - Bing";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/search";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://www.bing.com/search?q=inf+ug+edu&form=PRPLPL&pc=EUPP_&httpsmsn=1&refig=4f" +
                "2bf84222d04b3cb1fece5566b51d8a&pq=inf+ug+edu&sc=4-10&sp=-1&qs=n&sk=";
            this.WindowTitles.Add("inf ug edu - Bing");
            #endregion
        }
        
        #region Properties
        public UIB_resultsCustom UIB_resultsCustom
        {
            get
            {
                if ((this.mUIB_resultsCustom == null))
                {
                    this.mUIB_resultsCustom = new UIB_resultsCustom(this);
                }
                return this.mUIB_resultsCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIB_resultsCustom mUIB_resultsCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIB_resultsCustom : HtmlCustom
    {
        
        public UIB_resultsCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "OL";
            this.SearchProperties["Id"] = "b_results";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.FilterProperties["Class"] = null;
            this.FilterProperties["ControlDefinition"] = "id=\"b_results\" role=\"main\" aria-label=\"W";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("inf ug edu - Bing");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIWydarzeniaInstytutInHyperlink
        {
            get
            {
                if ((this.mUIWydarzeniaInstytutInHyperlink == null))
                {
                    this.mUIWydarzeniaInstytutInHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIWydarzeniaInstytutInHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIWydarzeniaInstytutInHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIWydarzeniaInstytutInHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIWydarzeniaInstytutInHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Wydarzenia∴Instytut Informatyki UG";
                    this.mUIWydarzeniaInstytutInHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/";
                    this.mUIWydarzeniaInstytutInHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIWydarzeniaInstytutInHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://inf.ug.edu.pl/";
                    this.mUIWydarzeniaInstytutInHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIWydarzeniaInstytutInHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"https://inf.ug.edu.pl/\" h=\"ID=SERP";
                    this.mUIWydarzeniaInstytutInHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUIWydarzeniaInstytutInHyperlink.WindowTitles.Add("inf ug edu - Bing");
                    #endregion
                }
                return this.mUIWydarzeniaInstytutInHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIWydarzeniaInstytutInHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIWydarzeniaInstytutInDocument : HtmlDocument
    {
        
        public UIWydarzeniaInstytutInDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Wydarzenia∴Instytut Informatyki UG";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://inf.ug.edu.pl/";
            this.WindowTitles.Add("Wydarzenia∴Instytut Informatyki UG");
            #endregion
        }
        
        #region Properties
        public UIMenuBoxPane UIMenuBoxPane
        {
            get
            {
                if ((this.mUIMenuBoxPane == null))
                {
                    this.mUIMenuBoxPane = new UIMenuBoxPane(this);
                }
                return this.mUIMenuBoxPane;
            }
        }
        #endregion
        
        #region Fields
        private UIMenuBoxPane mUIMenuBoxPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIMenuBoxPane : HtmlDiv
    {
        
        public UIMenuBoxPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "menuBox";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Studia\r\n Rekrutacja\r\n Stacjonarne\r\n Nies";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"menuBox\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "8";
            this.WindowTitles.Add("Wydarzenia∴Instytut Informatyki UG");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIPocztaHyperlink
        {
            get
            {
                if ((this.mUIPocztaHyperlink == null))
                {
                    this.mUIPocztaHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIPocztaHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIPocztaHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIPocztaHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIPocztaHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Poczta";
                    this.mUIPocztaHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/sq";
                    this.mUIPocztaHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIPocztaHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://inf.ug.edu.pl/sq";
                    this.mUIPocztaHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIPocztaHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"https://inf.ug.edu.pl/sq\"";
                    this.mUIPocztaHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "13";
                    this.mUIPocztaHyperlink.WindowTitles.Add("Wydarzenia∴Instytut Informatyki UG");
                    #endregion
                }
                return this.mUIPocztaHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIPocztaHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPocztainfugeduplLogoDocument : HtmlDocument
    {
        
        public UIPocztainfugeduplLogoDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Poczta inf.ug.edu.pl - Logowanie";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/sq/src/login.php";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://inf.ug.edu.pl/sq/src/login.php";
            this.WindowTitles.Add("Poczta inf.ug.edu.pl - Logowanie");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UILogin_usernameEdit
        {
            get
            {
                if ((this.mUILogin_usernameEdit == null))
                {
                    this.mUILogin_usernameEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUILogin_usernameEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "login_username";
                    this.mUILogin_usernameEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "login_username";
                    this.mUILogin_usernameEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUILogin_usernameEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUILogin_usernameEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUILogin_usernameEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUILogin_usernameEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"login_username\" id=\"login_username";
                    this.mUILogin_usernameEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "1";
                    this.mUILogin_usernameEdit.WindowTitles.Add("Poczta inf.ug.edu.pl - Logowanie");
                    #endregion
                }
                return this.mUILogin_usernameEdit;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUILogin_usernameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIWitamynaFacebookuZalDocument : HtmlDocument
    {
        
        public UIWitamynaFacebookuZalDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Witamy na Facebooku. Zaloguj się, zarejestruj się lub dowiedz się więcej";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://www.facebook.com/";
            this.WindowTitles.Add("Witamy na Facebooku. Zaloguj się, zarejestruj się lub dowiedz się więcej");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UIFirstnameEdit
        {
            get
            {
                if ((this.mUIFirstnameEdit == null))
                {
                    this.mUIFirstnameEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIFirstnameEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "u_0_1";
                    this.mUIFirstnameEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "firstname";
                    this.mUIFirstnameEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIFirstnameEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIFirstnameEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIFirstnameEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "inputtext _58mg _5dba _2ph-";
                    this.mUIFirstnameEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"firstname\" class=\"inputtext _58mg ";
                    this.mUIFirstnameEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "14";
                    this.mUIFirstnameEdit.WindowTitles.Add("Witamy na Facebooku. Zaloguj się, zarejestruj się lub dowiedz się więcej");
                    #endregion
                }
                return this.mUIFirstnameEdit;
            }
        }
        
        public HtmlEdit UILastnameEdit
        {
            get
            {
                if ((this.mUILastnameEdit == null))
                {
                    this.mUILastnameEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUILastnameEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "u_0_3";
                    this.mUILastnameEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "lastname";
                    this.mUILastnameEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUILastnameEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUILastnameEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUILastnameEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "inputtext _58mg _5dba _2ph-";
                    this.mUILastnameEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"lastname\" class=\"inputtext _58mg _";
                    this.mUILastnameEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "15";
                    this.mUILastnameEdit.WindowTitles.Add("Witamy na Facebooku. Zaloguj się, zarejestruj się lub dowiedz się więcej");
                    #endregion
                }
                return this.mUILastnameEdit;
            }
        }
        
        public HtmlEdit UIReg_email__Edit
        {
            get
            {
                if ((this.mUIReg_email__Edit == null))
                {
                    this.mUIReg_email__Edit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIReg_email__Edit.SearchProperties[HtmlEdit.PropertyNames.Id] = "u_0_6";
                    this.mUIReg_email__Edit.SearchProperties[HtmlEdit.PropertyNames.Name] = "reg_email__";
                    this.mUIReg_email__Edit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIReg_email__Edit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIReg_email__Edit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIReg_email__Edit.FilterProperties[HtmlEdit.PropertyNames.Class] = "inputtext _58mg _5dba _2ph-";
                    this.mUIReg_email__Edit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"reg_email__\" class=\"inputtext _58m";
                    this.mUIReg_email__Edit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "16";
                    this.mUIReg_email__Edit.WindowTitles.Add("Witamy na Facebooku. Zaloguj się, zarejestruj się lub dowiedz się więcej");
                    #endregion
                }
                return this.mUIReg_email__Edit;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUIFirstnameEdit;
        
        private HtmlEdit mUILastnameEdit;
        
        private HtmlEdit mUIReg_email__Edit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIXDBingDocument : HtmlDocument
    {
        
        public UIXDBingDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "XD - Bing";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/search";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://www.bing.com/search?q=XD&form=PRPLPL&pc=EUPP_&httpsmsn=1&refig=917c02f2cd" +
                "6f4a9cb6bce621774f7941&pq=xd&sc=8-2&sp=-1&qs=n&sk=";
            this.WindowTitles.Add("XD - Bing");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIB_contentPane
        {
            get
            {
                if ((this.mUIB_contentPane == null))
                {
                    this.mUIB_contentPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIB_contentPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "b_content";
                    this.mUIB_contentPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIB_contentPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "wyniki: 18 200 000Data \r\n\r\n\r\nWszystkie\r\n";
                    this.mUIB_contentPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIB_contentPane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUIB_contentPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"b_content\"";
                    this.mUIB_contentPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "6";
                    this.mUIB_contentPane.WindowTitles.Add("XD - Bing");
                    #endregion
                }
                return this.mUIB_contentPane;
            }
        }
        
        public UIB_resultsCustom1 UIB_resultsCustom
        {
            get
            {
                if ((this.mUIB_resultsCustom == null))
                {
                    this.mUIB_resultsCustom = new UIB_resultsCustom1(this);
                }
                return this.mUIB_resultsCustom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIB_contentPane;
        
        private UIB_resultsCustom1 mUIB_resultsCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIB_resultsCustom1 : HtmlCustom
    {
        
        public UIB_resultsCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "OL";
            this.SearchProperties["Id"] = "b_results";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.FilterProperties["Class"] = null;
            this.FilterProperties["ControlDefinition"] = "id=\"b_results\" role=\"main\" aria-label=\"W";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("XD - Bing");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIDisneyXDOficjalnastrHyperlink
        {
            get
            {
                if ((this.mUIDisneyXDOficjalnastrHyperlink == null))
                {
                    this.mUIDisneyXDOficjalnastrHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIDisneyXDOficjalnastrHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIDisneyXDOficjalnastrHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIDisneyXDOficjalnastrHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIDisneyXDOficjalnastrHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Disney XD - Oficjalna strona Disney XD w Polsce";
                    this.mUIDisneyXDOficjalnastrHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/";
                    this.mUIDisneyXDOficjalnastrHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIDisneyXDOficjalnastrHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://disneyxd.disney.pl/";
                    this.mUIDisneyXDOficjalnastrHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIDisneyXDOficjalnastrHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"http://disneyxd.disney.pl/\" h=\"ID=";
                    this.mUIDisneyXDOficjalnastrHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUIDisneyXDOficjalnastrHyperlink.WindowTitles.Add("XD - Bing");
                    #endregion
                }
                return this.mUIDisneyXDOficjalnastrHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIDisneyXDOficjalnastrHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIHomePageGamesStudiosDocument : HtmlDocument
    {
        
        public UIHomePageGamesStudiosDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Home Page - GamesStudios";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:59145/";
            this.WindowTitles.Add("Home Page - GamesStudios");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIGenresDatabaseHyperlink
        {
            get
            {
                if ((this.mUIGenresDatabaseHyperlink == null))
                {
                    this.mUIGenresDatabaseHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIGenresDatabaseHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIGenresDatabaseHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIGenresDatabaseHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIGenresDatabaseHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Genre\'s Database";
                    this.mUIGenresDatabaseHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Genre";
                    this.mUIGenresDatabaseHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIGenresDatabaseHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:59145/Genre";
                    this.mUIGenresDatabaseHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIGenresDatabaseHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/Genre\"";
                    this.mUIGenresDatabaseHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "4";
                    this.mUIGenresDatabaseHyperlink.WindowTitles.Add("Home Page - GamesStudios");
                    #endregion
                }
                return this.mUIGenresDatabaseHyperlink;
            }
        }
        
        public HtmlHyperlink UIGamesDatabaseHyperlink
        {
            get
            {
                if ((this.mUIGamesDatabaseHyperlink == null))
                {
                    this.mUIGamesDatabaseHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIGamesDatabaseHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIGamesDatabaseHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIGamesDatabaseHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIGamesDatabaseHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Game\'s Database";
                    this.mUIGamesDatabaseHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Game";
                    this.mUIGamesDatabaseHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIGamesDatabaseHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:59145/Game";
                    this.mUIGamesDatabaseHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIGamesDatabaseHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/Game\"";
                    this.mUIGamesDatabaseHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "5";
                    this.mUIGamesDatabaseHyperlink.WindowTitles.Add("Home Page - GamesStudios");
                    #endregion
                }
                return this.mUIGamesDatabaseHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIGenresDatabaseHyperlink;
        
        private HtmlHyperlink mUIGamesDatabaseHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIIndexGamesStudiosDocument : HtmlDocument
    {
        
        public UIIndexGamesStudiosDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Index - GamesStudios";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Genre";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:59145/Genre";
            this.WindowTitles.Add("Index - GamesStudios");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UICreateNewHyperlink
        {
            get
            {
                if ((this.mUICreateNewHyperlink == null))
                {
                    this.mUICreateNewHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUICreateNewHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUICreateNewHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUICreateNewHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUICreateNewHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Create New";
                    this.mUICreateNewHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Genre/Create";
                    this.mUICreateNewHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUICreateNewHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:59145/Genre/Create";
                    this.mUICreateNewHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUICreateNewHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/Genre/Create\"";
                    this.mUICreateNewHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "6";
                    this.mUICreateNewHyperlink.WindowTitles.Add("Index - GamesStudios");
                    #endregion
                }
                return this.mUICreateNewHyperlink;
            }
        }
        
        public HtmlDiv UIIndexCreateNewGenreNPane
        {
            get
            {
                if ((this.mUIIndexCreateNewGenreNPane == null))
                {
                    this.mUIIndexCreateNewGenreNPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIIndexCreateNewGenreNPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIIndexCreateNewGenreNPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIIndexCreateNewGenreNPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Index\r\n\r\nCreate New \r\n\r\n\r\n\r\nGenre Name \r";
                    this.mUIIndexCreateNewGenreNPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIIndexCreateNewGenreNPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "container body-content";
                    this.mUIIndexCreateNewGenreNPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"container body-content\"";
                    this.mUIIndexCreateNewGenreNPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "4";
                    this.mUIIndexCreateNewGenreNPane.WindowTitles.Add("Index - GamesStudios");
                    #endregion
                }
                return this.mUIIndexCreateNewGenreNPane;
            }
        }
        
        public HtmlHyperlink UIDeleteHyperlink
        {
            get
            {
                if ((this.mUIDeleteHyperlink == null))
                {
                    this.mUIDeleteHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIDeleteHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIDeleteHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIDeleteHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIDeleteHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Delete";
                    this.mUIDeleteHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Genre/Delete/5";
                    this.mUIDeleteHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIDeleteHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:59145/Genre/Delete/5";
                    this.mUIDeleteHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIDeleteHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/Genre/Delete/5\"";
                    this.mUIDeleteHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "21";
                    this.mUIDeleteHyperlink.WindowTitles.Add("Index - GamesStudios");
                    #endregion
                }
                return this.mUIDeleteHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUICreateNewHyperlink;
        
        private HtmlDiv mUIIndexCreateNewGenreNPane;
        
        private HtmlHyperlink mUIDeleteHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UICreateGamesStudiosDocument : HtmlDocument
    {
        
        public UICreateGamesStudiosDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Create - GamesStudios";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Genre/Create";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:59145/Genre/Create";
            this.WindowTitles.Add("Create - GamesStudios");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UIGenreNameEdit
        {
            get
            {
                if ((this.mUIGenreNameEdit == null))
                {
                    this.mUIGenreNameEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIGenreNameEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Name";
                    this.mUIGenreNameEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Name";
                    this.mUIGenreNameEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Genre Name";
                    this.mUIGenreNameEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIGenreNameEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIGenreNameEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control text-box single-line";
                    this.mUIGenreNameEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"Name\" class=\"form-control text-box";
                    this.mUIGenreNameEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "2";
                    this.mUIGenreNameEdit.WindowTitles.Add("Create - GamesStudios");
                    #endregion
                }
                return this.mUIGenreNameEdit;
            }
        }
        
        public HtmlInputButton UICreateButton
        {
            get
            {
                if ((this.mUICreateButton == null))
                {
                    this.mUICreateButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUICreateButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUICreateButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUICreateButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Create";
                    this.mUICreateButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUICreateButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUICreateButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-default";
                    this.mUICreateButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-default\" type=\"submit\" va";
                    this.mUICreateButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "3";
                    this.mUICreateButton.WindowTitles.Add("Create - GamesStudios");
                    #endregion
                }
                return this.mUICreateButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUIGenreNameEdit;
        
        private HtmlInputButton mUICreateButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIIndexGamesStudiosDocument1 : HtmlDocument
    {
        
        public UIIndexGamesStudiosDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Index - GamesStudios";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Game";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:59145/Game";
            this.WindowTitles.Add("Index - GamesStudios");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UICreateNewHyperlink
        {
            get
            {
                if ((this.mUICreateNewHyperlink == null))
                {
                    this.mUICreateNewHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUICreateNewHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUICreateNewHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUICreateNewHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUICreateNewHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Create New";
                    this.mUICreateNewHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Game/Create";
                    this.mUICreateNewHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUICreateNewHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:59145/Game/Create";
                    this.mUICreateNewHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUICreateNewHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/Game/Create\"";
                    this.mUICreateNewHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "6";
                    this.mUICreateNewHyperlink.WindowTitles.Add("Index - GamesStudios");
                    #endregion
                }
                return this.mUICreateNewHyperlink;
            }
        }
        
        public HtmlHyperlink UIDeleteHyperlink
        {
            get
            {
                if ((this.mUIDeleteHyperlink == null))
                {
                    this.mUIDeleteHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIDeleteHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIDeleteHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIDeleteHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIDeleteHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Delete";
                    this.mUIDeleteHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Game/Delete/24";
                    this.mUIDeleteHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIDeleteHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:59145/Game/Delete/24";
                    this.mUIDeleteHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIDeleteHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/Game/Delete/24\"";
                    this.mUIDeleteHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "78";
                    this.mUIDeleteHyperlink.WindowTitles.Add("Index - GamesStudios");
                    #endregion
                }
                return this.mUIDeleteHyperlink;
            }
        }
        
        public HtmlHyperlink UIEditHyperlink
        {
            get
            {
                if ((this.mUIEditHyperlink == null))
                {
                    this.mUIEditHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIEditHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIEditHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIEditHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIEditHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Edit";
                    this.mUIEditHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Game/Edit/26";
                    this.mUIEditHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIEditHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:59145/Game/Edit/26";
                    this.mUIEditHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIEditHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/Game/Edit/26\"";
                    this.mUIEditHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "77";
                    this.mUIEditHyperlink.WindowTitles.Add("Index - GamesStudios");
                    #endregion
                }
                return this.mUIEditHyperlink;
            }
        }
        
        public HtmlHyperlink UIGenresDatabaseHyperlink
        {
            get
            {
                if ((this.mUIGenresDatabaseHyperlink == null))
                {
                    this.mUIGenresDatabaseHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIGenresDatabaseHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIGenresDatabaseHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIGenresDatabaseHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIGenresDatabaseHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Genre\'s Database";
                    this.mUIGenresDatabaseHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Genre";
                    this.mUIGenresDatabaseHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIGenresDatabaseHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:59145/Genre";
                    this.mUIGenresDatabaseHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIGenresDatabaseHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/Genre\"";
                    this.mUIGenresDatabaseHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "4";
                    this.mUIGenresDatabaseHyperlink.WindowTitles.Add("Index - GamesStudios");
                    #endregion
                }
                return this.mUIGenresDatabaseHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUICreateNewHyperlink;
        
        private HtmlHyperlink mUIDeleteHyperlink;
        
        private HtmlHyperlink mUIEditHyperlink;
        
        private HtmlHyperlink mUIGenresDatabaseHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UICreateGamesStudiosDocument1 : HtmlDocument
    {
        
        public UICreateGamesStudiosDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Create - GamesStudios";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Game/Create";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:59145/Game/Create";
            this.WindowTitles.Add("Create - GamesStudios");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UITitleEdit
        {
            get
            {
                if ((this.mUITitleEdit == null))
                {
                    this.mUITitleEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUITitleEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Name";
                    this.mUITitleEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Name";
                    this.mUITitleEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Title";
                    this.mUITitleEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUITitleEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUITitleEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control text-box single-line";
                    this.mUITitleEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"Name\" class=\"form-control text-box";
                    this.mUITitleEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "2";
                    this.mUITitleEdit.WindowTitles.Add("Create - GamesStudios");
                    #endregion
                }
                return this.mUITitleEdit;
            }
        }
        
        public HtmlInputButton UICreateButton
        {
            get
            {
                if ((this.mUICreateButton == null))
                {
                    this.mUICreateButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUICreateButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUICreateButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUICreateButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Create";
                    this.mUICreateButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUICreateButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUICreateButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-default";
                    this.mUICreateButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-default\" type=\"submit\" va";
                    this.mUICreateButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "3";
                    this.mUICreateButton.WindowTitles.Add("Create - GamesStudios");
                    #endregion
                }
                return this.mUICreateButton;
            }
        }
        
        public HtmlComboBox UIGenreComboBox
        {
            get
            {
                if ((this.mUIGenreComboBox == null))
                {
                    this.mUIGenreComboBox = new HtmlComboBox(this);
                    #region Search Criteria
                    this.mUIGenreComboBox.SearchProperties[HtmlComboBox.PropertyNames.Id] = "GenreID";
                    this.mUIGenreComboBox.SearchProperties[HtmlComboBox.PropertyNames.Name] = "GenreID";
                    this.mUIGenreComboBox.FilterProperties[HtmlComboBox.PropertyNames.LabeledBy] = "Genre";
                    this.mUIGenreComboBox.FilterProperties[HtmlComboBox.PropertyNames.Size] = "0";
                    this.mUIGenreComboBox.FilterProperties[HtmlComboBox.PropertyNames.Title] = null;
                    this.mUIGenreComboBox.FilterProperties[HtmlComboBox.PropertyNames.ItemCount] = "4";
                    this.mUIGenreComboBox.FilterProperties[HtmlComboBox.PropertyNames.Class] = "form-control";
                    this.mUIGenreComboBox.FilterProperties[HtmlComboBox.PropertyNames.ControlDefinition] = "name=\"GenreID\" class=\"form-control\" id=\"";
                    this.mUIGenreComboBox.FilterProperties[HtmlComboBox.PropertyNames.TagInstance] = "1";
                    this.mUIGenreComboBox.WindowTitles.Add("Create - GamesStudios");
                    #endregion
                }
                return this.mUIGenreComboBox;
            }
        }
        
        public HtmlEdit UINameEdit
        {
            get
            {
                if ((this.mUINameEdit == null))
                {
                    this.mUINameEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUINameEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "xd";
                    this.mUINameEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Name";
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control text-box single-line";
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"Name\" class=\"form-control text-box";
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "2";
                    this.mUINameEdit.WindowTitles.Add("Create - GamesStudios");
                    #endregion
                }
                return this.mUINameEdit;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUITitleEdit;
        
        private HtmlInputButton mUICreateButton;
        
        private HtmlComboBox mUIGenreComboBox;
        
        private HtmlEdit mUINameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDeleteGamesStudiosDocument : HtmlDocument
    {
        
        public UIDeleteGamesStudiosDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Delete - GamesStudios";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Game/Delete/24";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:59145/Game/Delete/24";
            this.WindowTitles.Add("Delete - GamesStudios");
            #endregion
        }
        
        #region Properties
        public HtmlInputButton UIDeleteButton
        {
            get
            {
                if ((this.mUIDeleteButton == null))
                {
                    this.mUIDeleteButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUIDeleteButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUIDeleteButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUIDeleteButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Delete";
                    this.mUIDeleteButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUIDeleteButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIDeleteButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-default";
                    this.mUIDeleteButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-default\" type=\"submit\" va";
                    this.mUIDeleteButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "2";
                    this.mUIDeleteButton.WindowTitles.Add("Delete - GamesStudios");
                    #endregion
                }
                return this.mUIDeleteButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlInputButton mUIDeleteButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIEditGamesStudiosDocument : HtmlDocument
    {
        
        public UIEditGamesStudiosDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Edit - GamesStudios";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Game/Edit/26";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:59145/Game/Edit/26";
            this.WindowTitles.Add("Edit - GamesStudios");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UITitleEdit
        {
            get
            {
                if ((this.mUITitleEdit == null))
                {
                    this.mUITitleEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUITitleEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Name";
                    this.mUITitleEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Name";
                    this.mUITitleEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Title";
                    this.mUITitleEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUITitleEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUITitleEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control text-box single-line";
                    this.mUITitleEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"Name\" class=\"form-control text-box";
                    this.mUITitleEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "3";
                    this.mUITitleEdit.WindowTitles.Add("Edit - GamesStudios");
                    #endregion
                }
                return this.mUITitleEdit;
            }
        }
        
        public HtmlInputButton UISaveButton
        {
            get
            {
                if ((this.mUISaveButton == null))
                {
                    this.mUISaveButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUISaveButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUISaveButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUISaveButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Save";
                    this.mUISaveButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-default";
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-default\" type=\"submit\" va";
                    this.mUISaveButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "4";
                    this.mUISaveButton.WindowTitles.Add("Edit - GamesStudios");
                    #endregion
                }
                return this.mUISaveButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUITitleEdit;
        
        private HtmlInputButton mUISaveButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDeleteGamesStudiosDocument1 : HtmlDocument
    {
        
        public UIDeleteGamesStudiosDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Delete - GamesStudios";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Genre/Delete/5";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:59145/Genre/Delete/5";
            this.WindowTitles.Add("Delete - GamesStudios");
            #endregion
        }
        
        #region Properties
        public HtmlInputButton UIDeleteButton
        {
            get
            {
                if ((this.mUIDeleteButton == null))
                {
                    this.mUIDeleteButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUIDeleteButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUIDeleteButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUIDeleteButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Delete";
                    this.mUIDeleteButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUIDeleteButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIDeleteButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-default";
                    this.mUIDeleteButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-default\" type=\"submit\" va";
                    this.mUIDeleteButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "2";
                    this.mUIDeleteButton.WindowTitles.Add("Delete - GamesStudios");
                    #endregion
                }
                return this.mUIDeleteButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlInputButton mUIDeleteButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIAllMyASPNETApplicatiWindow : BrowserWindow
    {
        
        public UIAllMyASPNETApplicatiWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "All - My ASP.NET Application";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("All - My ASP.NET Application");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIAllMyASPNETApplicatiDocument UIAllMyASPNETApplicatiDocument
        {
            get
            {
                if ((this.mUIAllMyASPNETApplicatiDocument == null))
                {
                    this.mUIAllMyASPNETApplicatiDocument = new UIAllMyASPNETApplicatiDocument(this);
                }
                return this.mUIAllMyASPNETApplicatiDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIAllMyASPNETApplicatiDocument mUIAllMyASPNETApplicatiDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIAllMyASPNETApplicatiDocument : HtmlDocument
    {
        
        public UIAllMyASPNETApplicatiDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "All - My ASP.NET Application";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Person/All";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:9098/Person/All";
            this.WindowTitles.Add("All - My ASP.NET Application");
            #endregion
        }
        
        #region Properties
        public HtmlButton UISprawdźadresButton
        {
            get
            {
                if ((this.mUISprawdźadresButton == null))
                {
                    this.mUISprawdźadresButton = new HtmlButton(this);
                    #region Search Criteria
                    this.mUISprawdźadresButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUISprawdźadresButton.SearchProperties[HtmlButton.PropertyNames.Name] = "sprAdres";
                    this.mUISprawdźadresButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Sprawdź adres";
                    this.mUISprawdźadresButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUISprawdźadresButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUISprawdźadresButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-default";
                    this.mUISprawdźadresButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "name=\"sprAdres\" class=\"btn btn-default\" ";
                    this.mUISprawdźadresButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "2";
                    this.mUISprawdźadresButton.WindowTitles.Add("All - My ASP.NET Application");
                    #endregion
                }
                return this.mUISprawdźadresButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlButton mUISprawdźadresButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIMyASPNETApplicationIWindow : BrowserWindow
    {
        
        public UIMyASPNETApplicationIWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "- My ASP.NET Application";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("- My ASP.NET Application");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIMyASPNETApplicationDocument UIMyASPNETApplicationDocument
        {
            get
            {
                if ((this.mUIMyASPNETApplicationDocument == null))
                {
                    this.mUIMyASPNETApplicationDocument = new UIMyASPNETApplicationDocument(this);
                }
                return this.mUIMyASPNETApplicationDocument;
            }
        }
        
        public UIMyASPNETApplicationDocument1 UIMyASPNETApplicationDocument1
        {
            get
            {
                if ((this.mUIMyASPNETApplicationDocument1 == null))
                {
                    this.mUIMyASPNETApplicationDocument1 = new UIMyASPNETApplicationDocument1(this);
                }
                return this.mUIMyASPNETApplicationDocument1;
            }
        }
        #endregion
        
        #region Fields
        private UIMyASPNETApplicationDocument mUIMyASPNETApplicationDocument;
        
        private UIMyASPNETApplicationDocument1 mUIMyASPNETApplicationDocument1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIMyASPNETApplicationDocument : HtmlDocument
    {
        
        public UIMyASPNETApplicationDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "- My ASP.NET Application";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Adres/DisplayById/2";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:9098/Adres/DisplayById/2";
            this.WindowTitles.Add("- My ASP.NET Application");
            #endregion
        }
        
        #region Properties
        public HtmlButton UIEdytujButton
        {
            get
            {
                if ((this.mUIEdytujButton == null))
                {
                    this.mUIEdytujButton = new HtmlButton(this);
                    #region Search Criteria
                    this.mUIEdytujButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUIEdytujButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUIEdytujButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Edytuj";
                    this.mUIEdytujButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUIEdytujButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIEdytujButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-default";
                    this.mUIEdytujButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-default\" onclick=\"locatio";
                    this.mUIEdytujButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "2";
                    this.mUIEdytujButton.WindowTitles.Add("- My ASP.NET Application");
                    #endregion
                }
                return this.mUIEdytujButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlButton mUIEdytujButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIMyASPNETApplicationDocument1 : HtmlDocument
    {
        
        public UIMyASPNETApplicationDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "- My ASP.NET Application";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Adres/Edit/2";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:9098/Adres/Edit/2";
            this.WindowTitles.Add("- My ASP.NET Application");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UIMiastoEdit
        {
            get
            {
                if ((this.mUIMiastoEdit == null))
                {
                    this.mUIMiastoEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIMiastoEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "miasto";
                    this.mUIMiastoEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "miasto";
                    this.mUIMiastoEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Miasto";
                    this.mUIMiastoEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIMiastoEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIMiastoEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUIMiastoEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"miasto\" id=\"miasto\" type=\"text\" va";
                    this.mUIMiastoEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "3";
                    this.mUIMiastoEdit.WindowTitles.Add("- My ASP.NET Application");
                    #endregion
                }
                return this.mUIMiastoEdit;
            }
        }
        
        public HtmlInputButton UIZapiszButton
        {
            get
            {
                if ((this.mUIZapiszButton == null))
                {
                    this.mUIZapiszButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUIZapiszButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUIZapiszButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUIZapiszButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Zapisz";
                    this.mUIZapiszButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUIZapiszButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIZapiszButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-default";
                    this.mUIZapiszButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-default\" type=\"submit\" va";
                    this.mUIZapiszButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "8";
                    this.mUIZapiszButton.WindowTitles.Add("- My ASP.NET Application");
                    #endregion
                }
                return this.mUIZapiszButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUIMiastoEdit;
        
        private HtmlInputButton mUIZapiszButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIUseUIAutomationToTesWindow : WinWindow
    {
        
        public UIUseUIAutomationToTesWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Use UI Automation To Test Your Code - Mozilla Firefox";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "MozillaWindowClass";
            this.WindowTitles.Add("Use UI Automation To Test Your Code - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public UIUseUIAutomationToTesApplication UIUseUIAutomationToTesApplication
        {
            get
            {
                if ((this.mUIUseUIAutomationToTesApplication == null))
                {
                    this.mUIUseUIAutomationToTesApplication = new UIUseUIAutomationToTesApplication(this);
                }
                return this.mUIUseUIAutomationToTesApplication;
            }
        }
        #endregion
        
        #region Fields
        private UIUseUIAutomationToTesApplication mUIUseUIAutomationToTesApplication;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIUseUIAutomationToTesApplication : WinControl
    {
        
        public UIUseUIAutomationToTesApplication(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Use UI Automation To Test Your Code - Mozilla Firefox";
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "Application";
            this.WindowTitles.Add("Use UI Automation To Test Your Code - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinButton UIItemButton
        {
            get
            {
                if ((this.mUIItemButton == null))
                {
                    this.mUIItemButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIItemButton.SearchProperties[WinButton.PropertyNames.Instance] = "2";
                    this.mUIItemButton.WindowTitles.Add("Use UI Automation To Test Your Code - Mozilla Firefox");
                    #endregion
                }
                return this.mUIItemButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIItemButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UINowakartaMozillaFireWindow : WinWindow
    {
        
        public UINowakartaMozillaFireWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Nowa karta - Mozilla Firefox";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "MozillaWindowClass";
            this.WindowTitles.Add("Nowa karta - Mozilla Firefox");
            this.WindowTitles.Add("Home Page - GamesStudios - Mozilla Firefox");
            this.WindowTitles.Add("Index - GamesStudios - Mozilla Firefox");
            this.WindowTitles.Add("Create - GamesStudios - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinControl UINowakartaMozillaFireApplication
        {
            get
            {
                if ((this.mUINowakartaMozillaFireApplication == null))
                {
                    this.mUINowakartaMozillaFireApplication = new WinControl(this);
                    #region Search Criteria
                    this.mUINowakartaMozillaFireApplication.SearchProperties[UITestControl.PropertyNames.Name] = "Nowa karta - Mozilla Firefox";
                    this.mUINowakartaMozillaFireApplication.SearchProperties[UITestControl.PropertyNames.ControlType] = "Application";
                    this.mUINowakartaMozillaFireApplication.WindowTitles.Add("Nowa karta - Mozilla Firefox");
                    #endregion
                }
                return this.mUINowakartaMozillaFireApplication;
            }
        }
        
        public UIPaseknarzędzinawigacToolBar UIPaseknarzędzinawigacToolBar
        {
            get
            {
                if ((this.mUIPaseknarzędzinawigacToolBar == null))
                {
                    this.mUIPaseknarzędzinawigacToolBar = new UIPaseknarzędzinawigacToolBar(this);
                }
                return this.mUIPaseknarzędzinawigacToolBar;
            }
        }
        
        public UIItemComboBox UIItemComboBox
        {
            get
            {
                if ((this.mUIItemComboBox == null))
                {
                    this.mUIItemComboBox = new UIItemComboBox(this);
                }
                return this.mUIItemComboBox;
            }
        }
        
        public UIItemPropertyPage UIItemPropertyPage
        {
            get
            {
                if ((this.mUIItemPropertyPage == null))
                {
                    this.mUIItemPropertyPage = new UIItemPropertyPage(this);
                }
                return this.mUIItemPropertyPage;
            }
        }
        
        public UICreateNewHyperlink UICreateNewHyperlink
        {
            get
            {
                if ((this.mUICreateNewHyperlink == null))
                {
                    this.mUICreateNewHyperlink = new UICreateNewHyperlink(this);
                }
                return this.mUICreateNewHyperlink;
            }
        }
        
        public UICreateGamesStudiosDocument2 UICreateGamesStudiosDocument
        {
            get
            {
                if ((this.mUICreateGamesStudiosDocument == null))
                {
                    this.mUICreateGamesStudiosDocument = new UICreateGamesStudiosDocument2(this);
                }
                return this.mUICreateGamesStudiosDocument;
            }
        }
        
        public UIHomePageGamesStudiosMoziApplication UIHomePageGamesStudiosMoziApplication
        {
            get
            {
                if ((this.mUIHomePageGamesStudiosMoziApplication == null))
                {
                    this.mUIHomePageGamesStudiosMoziApplication = new UIHomePageGamesStudiosMoziApplication(this);
                }
                return this.mUIHomePageGamesStudiosMoziApplication;
            }
        }
        
        public UIPawełLuszukProjectHyperlink UIPawełLuszukProjectHyperlink
        {
            get
            {
                if ((this.mUIPawełLuszukProjectHyperlink == null))
                {
                    this.mUIPawełLuszukProjectHyperlink = new UIPawełLuszukProjectHyperlink(this);
                }
                return this.mUIPawełLuszukProjectHyperlink;
            }
        }
        
        public UIGamesDatabaseHyperlink UIGamesDatabaseHyperlink
        {
            get
            {
                if ((this.mUIGamesDatabaseHyperlink == null))
                {
                    this.mUIGamesDatabaseHyperlink = new UIGamesDatabaseHyperlink(this);
                }
                return this.mUIGamesDatabaseHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private WinControl mUINowakartaMozillaFireApplication;
        
        private UIPaseknarzędzinawigacToolBar mUIPaseknarzędzinawigacToolBar;
        
        private UIItemComboBox mUIItemComboBox;
        
        private UIItemPropertyPage mUIItemPropertyPage;
        
        private UICreateNewHyperlink mUICreateNewHyperlink;
        
        private UICreateGamesStudiosDocument2 mUICreateGamesStudiosDocument;
        
        private UIHomePageGamesStudiosMoziApplication mUIHomePageGamesStudiosMoziApplication;
        
        private UIPawełLuszukProjectHyperlink mUIPawełLuszukProjectHyperlink;
        
        private UIGamesDatabaseHyperlink mUIGamesDatabaseHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPaseknarzędzinawigacToolBar : WinToolBar
    {
        
        public UIPaseknarzędzinawigacToolBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinToolBar.PropertyNames.Name] = "Pasek narzędzi nawigacyjnych";
            this.WindowTitles.Add("Nowa karta - Mozilla Firefox");
            this.WindowTitles.Add("Home Page - GamesStudios - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIItemComboBox
        {
            get
            {
                if ((this.mUIItemComboBox == null))
                {
                    this.mUIItemComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUIItemComboBox.WindowTitles.Add("Nowa karta - Mozilla Firefox");
                    this.mUIItemComboBox.WindowTitles.Add("Home Page - GamesStudios - Mozilla Firefox");
                    #endregion
                }
                return this.mUIItemComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIItemComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemComboBox : WinComboBox
    {
        
        public UIItemComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Nowa karta - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinEdit UIWprowadźadreslubszukEdit
        {
            get
            {
                if ((this.mUIWprowadźadreslubszukEdit == null))
                {
                    this.mUIWprowadźadreslubszukEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIWprowadźadreslubszukEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Wprowadź adres lub szukaj";
                    this.mUIWprowadźadreslubszukEdit.WindowTitles.Add("Nowa karta - Mozilla Firefox");
                    #endregion
                }
                return this.mUIWprowadźadreslubszukEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIWprowadźadreslubszukEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemPropertyPage : WinControl
    {
        
        public UIItemPropertyPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "PropertyPage";
            this.WindowTitles.Add("Home Page - GamesStudios - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinControl UIHomePageGamesStudiosDocument
        {
            get
            {
                if ((this.mUIHomePageGamesStudiosDocument == null))
                {
                    this.mUIHomePageGamesStudiosDocument = new WinControl(this);
                    #region Search Criteria
                    this.mUIHomePageGamesStudiosDocument.SearchProperties[UITestControl.PropertyNames.Name] = "Home Page - GamesStudios";
                    this.mUIHomePageGamesStudiosDocument.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
                    this.mUIHomePageGamesStudiosDocument.WindowTitles.Add("Home Page - GamesStudios - Mozilla Firefox");
                    #endregion
                }
                return this.mUIHomePageGamesStudiosDocument;
            }
        }
        #endregion
        
        #region Fields
        private WinControl mUIHomePageGamesStudiosDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UICreateNewHyperlink : WinHyperlink
    {
        
        public UICreateNewHyperlink(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinHyperlink.PropertyNames.Name] = "Create New";
            this.WindowTitles.Add("Index - GamesStudios - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinEdit UICreateNewEdit
        {
            get
            {
                if ((this.mUICreateNewEdit == null))
                {
                    this.mUICreateNewEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUICreateNewEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Create New";
                    this.mUICreateNewEdit.WindowTitles.Add("Index - GamesStudios - Mozilla Firefox");
                    #endregion
                }
                return this.mUICreateNewEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUICreateNewEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UICreateGamesStudiosDocument2 : WinControl
    {
        
        public UICreateGamesStudiosDocument2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Create - GamesStudios";
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
            this.WindowTitles.Add("Create - GamesStudios - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinEdit UITitleEdit
        {
            get
            {
                if ((this.mUITitleEdit == null))
                {
                    this.mUITitleEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITitleEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Title";
                    this.mUITitleEdit.WindowTitles.Add("Create - GamesStudios - Mozilla Firefox");
                    #endregion
                }
                return this.mUITitleEdit;
            }
        }
        
        public WinComboBox UIGenreComboBox
        {
            get
            {
                if ((this.mUIGenreComboBox == null))
                {
                    this.mUIGenreComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUIGenreComboBox.SearchProperties[WinComboBox.PropertyNames.Name] = "Genre";
                    this.mUIGenreComboBox.WindowTitles.Add("Create - GamesStudios - Mozilla Firefox");
                    #endregion
                }
                return this.mUIGenreComboBox;
            }
        }
        
        public WinButton UICreateButton
        {
            get
            {
                if ((this.mUICreateButton == null))
                {
                    this.mUICreateButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICreateButton.SearchProperties[WinButton.PropertyNames.Name] = "Create";
                    this.mUICreateButton.WindowTitles.Add("Create - GamesStudios - Mozilla Firefox");
                    #endregion
                }
                return this.mUICreateButton;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITitleEdit;
        
        private WinComboBox mUIGenreComboBox;
        
        private WinButton mUICreateButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIHomePageGamesStudiosMoziApplication : WinControl
    {
        
        public UIHomePageGamesStudiosMoziApplication(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Home Page - GamesStudios - Mozilla Firefox";
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "Application";
            this.WindowTitles.Add("Home Page - GamesStudios - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinList UIItemList
        {
            get
            {
                if ((this.mUIItemList == null))
                {
                    this.mUIItemList = new WinList(this);
                    #region Search Criteria
                    this.mUIItemList.WindowTitles.Add("Home Page - GamesStudios - Mozilla Firefox");
                    #endregion
                }
                return this.mUIItemList;
            }
        }
        #endregion
        
        #region Fields
        private WinList mUIItemList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPawełLuszukProjectHyperlink : WinHyperlink
    {
        
        public UIPawełLuszukProjectHyperlink(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinHyperlink.PropertyNames.Name] = "Paweł Luszuk Project";
            this.WindowTitles.Add("Index - GamesStudios - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinEdit UIPawełLuszukProjectEdit
        {
            get
            {
                if ((this.mUIPawełLuszukProjectEdit == null))
                {
                    this.mUIPawełLuszukProjectEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIPawełLuszukProjectEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Paweł Luszuk Project";
                    this.mUIPawełLuszukProjectEdit.WindowTitles.Add("Index - GamesStudios - Mozilla Firefox");
                    #endregion
                }
                return this.mUIPawełLuszukProjectEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIPawełLuszukProjectEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGamesDatabaseHyperlink : WinHyperlink
    {
        
        public UIGamesDatabaseHyperlink(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinHyperlink.PropertyNames.Name] = "Game\'s Database";
            this.WindowTitles.Add("Home Page - GamesStudios - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinEdit UIGamesDatabaseEdit
        {
            get
            {
                if ((this.mUIGamesDatabaseEdit == null))
                {
                    this.mUIGamesDatabaseEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIGamesDatabaseEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Game\'s Database";
                    this.mUIGamesDatabaseEdit.WindowTitles.Add("Home Page - GamesStudios - Mozilla Firefox");
                    #endregion
                }
                return this.mUIGamesDatabaseEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIGamesDatabaseEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Genre";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "MozillaWindowClass";
            #endregion
        }
        
        #region Properties
        public WinComboBox UIGenreComboBox
        {
            get
            {
                if ((this.mUIGenreComboBox == null))
                {
                    this.mUIGenreComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUIGenreComboBox.SearchProperties[WinComboBox.PropertyNames.Name] = "Genre";
                    #endregion
                }
                return this.mUIGenreComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIGenreComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Desktop";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32769";
            #endregion
        }
        
        #region Properties
        public UIItemList UIItemList
        {
            get
            {
                if ((this.mUIItemList == null))
                {
                    this.mUIItemList = new UIItemList(this);
                }
                return this.mUIItemList;
            }
        }
        #endregion
        
        #region Fields
        private UIItemList mUIItemList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemList : WinList
    {
        
        public UIItemList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Create - GamesStudios - Mozilla Firefox");
            this.WindowTitles.Add("Strona startowa programu Mozilla Firefox - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinListItem UICodedUITestCodedUITeListItem
        {
            get
            {
                if ((this.mUICodedUITestCodedUITeListItem == null))
                {
                    this.mUICodedUITestCodedUITeListItem = new WinListItem(this);
                    #region Search Criteria
                    this.mUICodedUITestCodedUITeListItem.SearchProperties[WinListItem.PropertyNames.Name] = "CodedUITest CodedUITest";
                    #endregion
                }
                return this.mUICodedUITestCodedUITeListItem;
            }
        }
        
        public WinListItem UIUGoogleWyszukiwanieListItem
        {
            get
            {
                if ((this.mUIUGoogleWyszukiwanieListItem == null))
                {
                    this.mUIUGoogleWyszukiwanieListItem = new WinListItem(this);
                    #region Search Criteria
                    this.mUIUGoogleWyszukiwanieListItem.SearchProperties[WinListItem.PropertyNames.Name] = "U Google Wyszukiwanie";
                    #endregion
                }
                return this.mUIUGoogleWyszukiwanieListItem;
            }
        }
        #endregion
        
        #region Fields
        private WinListItem mUICodedUITestCodedUITeListItem;
        
        private WinListItem mUIUGoogleWyszukiwanieListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISearchWindowsWindow : WinWindow
    {
        
        public UISearchWindowsWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Search Windows";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "TrayButton";
            this.WindowTitles.Add("Search Windows");
            #endregion
        }
        
        #region Properties
        public WinButton UISearchWindowsButton
        {
            get
            {
                if ((this.mUISearchWindowsButton == null))
                {
                    this.mUISearchWindowsButton = new WinButton(this);
                    #region Search Criteria
                    this.mUISearchWindowsButton.SearchProperties[WinButton.PropertyNames.Name] = "Search Windows";
                    this.mUISearchWindowsButton.WindowTitles.Add("Search Windows");
                    #endregion
                }
                return this.mUISearchWindowsButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUISearchWindowsButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIAktualizacjaaplikacjWindow : WinWindow
    {
        
        public UIAktualizacjaaplikacjWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Aktualizacja aplikacji";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "MozillaWindowClass";
            this.WindowTitles.Add("Aktualizacja aplikacji");
            #endregion
        }
        
        #region Properties
        public UIAktualizacjaaplikacjTitleBar UIAktualizacjaaplikacjTitleBar
        {
            get
            {
                if ((this.mUIAktualizacjaaplikacjTitleBar == null))
                {
                    this.mUIAktualizacjaaplikacjTitleBar = new UIAktualizacjaaplikacjTitleBar(this);
                }
                return this.mUIAktualizacjaaplikacjTitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UIAktualizacjaaplikacjTitleBar mUIAktualizacjaaplikacjTitleBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIAktualizacjaaplikacjTitleBar : WinTitleBar
    {
        
        public UIAktualizacjaaplikacjTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Aktualizacja aplikacji");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Aktualizacja aplikacji");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIProgramManagerWindow : WinWindow
    {
        
        public UIProgramManagerWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Program Manager";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Progman";
            this.WindowTitles.Add("Program Manager");
            #endregion
        }
        
        #region Properties
        public UIDesktopList UIDesktopList
        {
            get
            {
                if ((this.mUIDesktopList == null))
                {
                    this.mUIDesktopList = new UIDesktopList(this);
                }
                return this.mUIDesktopList;
            }
        }
        #endregion
        
        #region Fields
        private UIDesktopList mUIDesktopList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDesktopList : WinList
    {
        
        public UIDesktopList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinList.PropertyNames.Name] = "Desktop";
            this.WindowTitles.Add("Program Manager");
            #endregion
        }
        
        #region Properties
        public WinListItem UIMozillaFirefoxListItem
        {
            get
            {
                if ((this.mUIMozillaFirefoxListItem == null))
                {
                    this.mUIMozillaFirefoxListItem = new WinListItem(this);
                    #region Search Criteria
                    this.mUIMozillaFirefoxListItem.SearchProperties[WinListItem.PropertyNames.Name] = "Mozilla Firefox";
                    this.mUIMozillaFirefoxListItem.WindowTitles.Add("Program Manager");
                    #endregion
                }
                return this.mUIMozillaFirefoxListItem;
            }
        }
        #endregion
        
        #region Fields
        private WinListItem mUIMozillaFirefoxListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIStronastartowaprograWindow : WinWindow
    {
        
        public UIStronastartowaprograWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Strona startowa programu Mozilla Firefox - Mozilla Firefox";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "MozillaWindowClass";
            this.WindowTitles.Add("Strona startowa programu Mozilla Firefox - Mozilla Firefox");
            this.WindowTitles.Add("CODEDUI - Google Search - Mozilla Firefox");
            this.WindowTitles.Add("Wydarzenia∴Instytut Informatyki UG - Mozilla Firefox");
            this.WindowTitles.Add("Poczta inf.ug.edu.pl - Logowanie - Mozilla Firefox");
            this.WindowTitles.Add("Plan zajęć - Mozilla Firefox");
            this.WindowTitles.Add("Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public UIPaseknarzędzinawigacToolBar1 UIPaseknarzędzinawigacToolBar
        {
            get
            {
                if ((this.mUIPaseknarzędzinawigacToolBar == null))
                {
                    this.mUIPaseknarzędzinawigacToolBar = new UIPaseknarzędzinawigacToolBar1(this);
                }
                return this.mUIPaseknarzędzinawigacToolBar;
            }
        }
        
        public UIItemComboBox1 UIItemComboBox
        {
            get
            {
                if ((this.mUIItemComboBox == null))
                {
                    this.mUIItemComboBox = new UIItemComboBox1(this);
                }
                return this.mUIItemComboBox;
            }
        }
        
        public UIPocztaHyperlink UIPocztaHyperlink
        {
            get
            {
                if ((this.mUIPocztaHyperlink == null))
                {
                    this.mUIPocztaHyperlink = new UIPocztaHyperlink(this);
                }
                return this.mUIPocztaHyperlink;
            }
        }
        
        public UIPlanzajęćHyperlink UIPlanzajęćHyperlink
        {
            get
            {
                if ((this.mUIPlanzajęćHyperlink == null))
                {
                    this.mUIPlanzajęćHyperlink = new UIPlanzajęćHyperlink(this);
                }
                return this.mUIPlanzajęćHyperlink;
            }
        }
        
        public UIMozillaFirefoxApplication UIMozillaFirefoxApplication
        {
            get
            {
                if ((this.mUIMozillaFirefoxApplication == null))
                {
                    this.mUIMozillaFirefoxApplication = new UIMozillaFirefoxApplication(this);
                }
                return this.mUIMozillaFirefoxApplication;
            }
        }
        
        public UIDlakierunkustudiówHyperlink UIDlakierunkustudiówHyperlink
        {
            get
            {
                if ((this.mUIDlakierunkustudiówHyperlink == null))
                {
                    this.mUIDlakierunkustudiówHyperlink = new UIDlakierunkustudiówHyperlink(this);
                }
                return this.mUIDlakierunkustudiówHyperlink;
            }
        }
        
        public UIInformatykaIIIrokHyperlink UIInformatykaIIIrokHyperlink
        {
            get
            {
                if ((this.mUIInformatykaIIIrokHyperlink == null))
                {
                    this.mUIInformatykaIIIrokHyperlink = new UIInformatykaIIIrokHyperlink(this);
                }
                return this.mUIInformatykaIIIrokHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private UIPaseknarzędzinawigacToolBar1 mUIPaseknarzędzinawigacToolBar;
        
        private UIItemComboBox1 mUIItemComboBox;
        
        private UIPocztaHyperlink mUIPocztaHyperlink;
        
        private UIPlanzajęćHyperlink mUIPlanzajęćHyperlink;
        
        private UIMozillaFirefoxApplication mUIMozillaFirefoxApplication;
        
        private UIDlakierunkustudiówHyperlink mUIDlakierunkustudiówHyperlink;
        
        private UIInformatykaIIIrokHyperlink mUIInformatykaIIIrokHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPaseknarzędzinawigacToolBar1 : WinToolBar
    {
        
        public UIPaseknarzędzinawigacToolBar1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinToolBar.PropertyNames.Name] = "Pasek narzędzi nawigacyjnych";
            this.WindowTitles.Add("Strona startowa programu Mozilla Firefox - Mozilla Firefox");
            this.WindowTitles.Add("CODEDUI - Google Search - Mozilla Firefox");
            this.WindowTitles.Add("Wydarzenia∴Instytut Informatyki UG - Mozilla Firefox");
            this.WindowTitles.Add("Poczta inf.ug.edu.pl - Logowanie - Mozilla Firefox");
            this.WindowTitles.Add("Plan zajęć - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIItemComboBox
        {
            get
            {
                if ((this.mUIItemComboBox == null))
                {
                    this.mUIItemComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUIItemComboBox.WindowTitles.Add("Strona startowa programu Mozilla Firefox - Mozilla Firefox");
                    this.mUIItemComboBox.WindowTitles.Add("CODEDUI - Google Search - Mozilla Firefox");
                    #endregion
                }
                return this.mUIItemComboBox;
            }
        }
        
        public WinButton UIWsteczButton
        {
            get
            {
                if ((this.mUIWsteczButton == null))
                {
                    this.mUIWsteczButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIWsteczButton.SearchProperties[WinButton.PropertyNames.Name] = "Wstecz";
                    this.mUIWsteczButton.WindowTitles.Add("Poczta inf.ug.edu.pl - Logowanie - Mozilla Firefox");
                    #endregion
                }
                return this.mUIWsteczButton;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIItemComboBox;
        
        private WinButton mUIWsteczButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemComboBox1 : WinComboBox
    {
        
        public UIItemComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Strona startowa programu Mozilla Firefox - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinEdit UIWprowadźadreslubszukEdit
        {
            get
            {
                if ((this.mUIWprowadźadreslubszukEdit == null))
                {
                    this.mUIWprowadźadreslubszukEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIWprowadźadreslubszukEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Wprowadź adres lub szukaj";
                    this.mUIWprowadźadreslubszukEdit.WindowTitles.Add("Strona startowa programu Mozilla Firefox - Mozilla Firefox");
                    #endregion
                }
                return this.mUIWprowadźadreslubszukEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIWprowadźadreslubszukEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPocztaHyperlink : WinHyperlink
    {
        
        public UIPocztaHyperlink(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinHyperlink.PropertyNames.Name] = "Poczta";
            this.WindowTitles.Add("Wydarzenia∴Instytut Informatyki UG - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinEdit UIPocztaEdit
        {
            get
            {
                if ((this.mUIPocztaEdit == null))
                {
                    this.mUIPocztaEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIPocztaEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Poczta";
                    this.mUIPocztaEdit.WindowTitles.Add("Wydarzenia∴Instytut Informatyki UG - Mozilla Firefox");
                    #endregion
                }
                return this.mUIPocztaEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIPocztaEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPlanzajęćHyperlink : WinHyperlink
    {
        
        public UIPlanzajęćHyperlink(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinHyperlink.PropertyNames.Name] = "Plan zajęć";
            this.WindowTitles.Add("Wydarzenia∴Instytut Informatyki UG - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinEdit UIPlanzajęćEdit
        {
            get
            {
                if ((this.mUIPlanzajęćEdit == null))
                {
                    this.mUIPlanzajęćEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIPlanzajęćEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Plan zajęć";
                    this.mUIPlanzajęćEdit.WindowTitles.Add("Wydarzenia∴Instytut Informatyki UG - Mozilla Firefox");
                    #endregion
                }
                return this.mUIPlanzajęćEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIPlanzajęćEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIMozillaFirefoxApplication : WinControl
    {
        
        public UIMozillaFirefoxApplication(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Mozilla Firefox";
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "Application";
            this.WindowTitles.Add("Mozilla Firefox");
            this.WindowTitles.Add("Plan zajęć - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinList UIItemList
        {
            get
            {
                if ((this.mUIItemList == null))
                {
                    this.mUIItemList = new WinList(this);
                    #region Search Criteria
                    this.mUIItemList.WindowTitles.Add("Mozilla Firefox");
                    this.mUIItemList.WindowTitles.Add("Plan zajęć - Mozilla Firefox");
                    #endregion
                }
                return this.mUIItemList;
            }
        }
        #endregion
        
        #region Fields
        private WinList mUIItemList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDlakierunkustudiówHyperlink : WinHyperlink
    {
        
        public UIDlakierunkustudiówHyperlink(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinHyperlink.PropertyNames.Name] = "dla kierunku studiów";
            this.WindowTitles.Add("Plan zajęć - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinEdit UIDlakierunkustudiówEdit
        {
            get
            {
                if ((this.mUIDlakierunkustudiówEdit == null))
                {
                    this.mUIDlakierunkustudiówEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIDlakierunkustudiówEdit.SearchProperties[WinEdit.PropertyNames.Name] = "dla kierunku studiów";
                    this.mUIDlakierunkustudiówEdit.WindowTitles.Add("Plan zajęć - Mozilla Firefox");
                    #endregion
                }
                return this.mUIDlakierunkustudiówEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIDlakierunkustudiówEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIInformatykaIIIrokHyperlink : WinHyperlink
    {
        
        public UIInformatykaIIIrokHyperlink(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinHyperlink.PropertyNames.Name] = "informatyka: III rok";
            this.WindowTitles.Add("Plan zajęć - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinEdit UIInformatykaIIIrokEdit
        {
            get
            {
                if ((this.mUIInformatykaIIIrokEdit == null))
                {
                    this.mUIInformatykaIIIrokEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIInformatykaIIIrokEdit.SearchProperties[WinEdit.PropertyNames.Name] = "informatyka: III rok";
                    this.mUIInformatykaIIIrokEdit.WindowTitles.Add("Plan zajęć - Mozilla Firefox");
                    #endregion
                }
                return this.mUIInformatykaIIIrokEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIInformatykaIIIrokEdit;
        #endregion
    }
}
